<QueryConfig AutoExecuteQueryOnLoad="false" PreventSQLBeautification="false">
  <ChangeLog>Changed by GER\rlouk on 11/1/2017 2:00:45 PM from F28PAP216N13.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\rlouk on 11/1/2017 12:58:24 PM from F28PAP216N13.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\mfg_rlouk on 10/1/2017 10:31:21 AM from F28PAP216N13.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\mfg_rlouk on 10/1/2017 10:24:50 AM from F28PAP216N13.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\mfg_rlouk on 10/1/2017 10:04:32 AM from F28PAP216N13.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\mfg_rlouk on 10/1/2017 9:55:05 AM from F28PAP216N13.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\mfg_rlouk on 8/20/2017 3:06:27 PM from F28PAP216N13.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\mfg_rlouk on 8/10/2017 9:36:00 AM from F28PAP216N13.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\mfg_rlouk on 5/7/2017 9:34:50 AM from F28PAP216N13.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\mfg_rlouk on 4/25/2017 11:36:54 AM from F28PAP216N13.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\mfg_rlouk on 4/25/2017 10:37:07 AM from F28PAP216N13.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 7/12/2016 3:52:50 AM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.2053</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 6/1/2016 10:43:10 AM from F28PAP216N3.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.1153</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 6/1/2016 10:04:05 AM from F28PAP216N3.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.1153</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 6/1/2016 10:02:58 AM from F28PAP216N3.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.1153</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 5/26/2016 9:41:21 AM from F28PAP216N3.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.1153</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/16/2015 8:49:11 PM from F28PAP216N3.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.0943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/3/2015 11:23:43 AM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/3/2015 11:21:55 AM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/3/2015 11:21:38 AM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/1/2015 11:38:34 AM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 8/12/2015 10:11:32 AM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 8/5/2015 11:46:22 AM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 6/24/2015 3:22:08 PM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 6/24/2015 3:19:14 PM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <UNIQECredentials UserId="uber" Site="rf3sap110-alias.rf3stg.mfgint.intel.com" DataSource="D1D_STAG_LogAnalyzer" SaveCredentials="true" UseUNIQECredentialsOnStartUp="false" QueryTimeOutInSeconds="-1">
    <Password />
    <Name />
  </UNIQECredentials>
  <QueryAttributes>
    <OutputDateFormat>MM/dd/yyyy hh:mm:ss</OutputDateFormat>
    <AlwaysReplaceDomainWithLocal>false</AlwaysReplaceDomainWithLocal>
  </QueryAttributes>
  <PostQuerySQL>select * from %{OUTPUT}</PostQuerySQL>
  <TableLayoutConfig>
    <BoundColumnList>Number,Urgency,Link,State,Area,Location,Process,AssignedTo,Requestor,Requestor_Manager,Created_On,UpdatedOn,NeedDate,EstimatedDelivery,Description,Category,ROI,CEID,Priority,LastUpdateBy,LogUpdate,LogType</BoundColumnList>
  </TableLayoutConfig>
  <RowHighlightingRules Enable="true" ColumnName="Globals" FilterRegex="O" RowColorString="NamedColor:White" />
  <RowHighlightingRules Enable="true" ColumnName="Platforms" FilterRegex="O" RowColorString="NamedColor:White" />
  <RowHighlightingRules Enable="true" ColumnName="AWIT" FilterRegex="O" RowColorString="NamedColor:White" />
  <RowHighlightingRules Enable="true" ColumnName="Pingable_WC" FilterRegex="Pingable" RowColorString="NamedColor:Lime" />
  <RowHighlightingRules Enable="true" ColumnName="Pingable_WC" FilterRegex="" RowColorString="NamedColor:White" />
  <TabOrder>C0,G0,G1,C1,C2,G2</TabOrder>
  <MainPivotConfig>
    <ColumnX FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnY FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnData FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <CustomPalette />
    <TableData />
  </MainPivotConfig>
  <MainPivotConfig>
    <QuerySQL>---Begin Main Query---
SELECT
	*
FROM
	%{output}
WHERE
	isinlist(Location, '@{SR_SITES}')
</QuerySQL>
    <ColumnX FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnY FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnData FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <RotateXAxisLabels>false</RotateXAxisLabels>
    <Name>Total Requests by Factory</Name>
    <ChartTitle>Total Requests by Factory</ChartTitle>
    <ColorPalette>Office</ColorPalette>
    <ChartExportSize>1000x300</ChartExportSize>
    <ShowLegend>false</ShowLegend>
    <CustomPalette />
    <TableData />
  </MainPivotConfig>
  <MainPivotConfig>
    <QuerySQL>---Begin Main Query---
SELECT
	*
FROM
	%{output}
WHERE
	isinlist(Location, '@{SR_SITES}')
	and applytimerangefilter(createdon, 'last 6 months')
</QuerySQL>
    <ColumnX FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnY FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnData FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ChartType>Spline</ChartType>
    <RotateXAxisLabels>false</RotateXAxisLabels>
    <Name>Requests by Factory Trend</Name>
    <ChartTitle>Request Trend by Factory</ChartTitle>
    <ColorPalette>Office</ColorPalette>
    <ChartExportSize>1000x300</ChartExportSize>
    <TimeIntervalForDateScale>7d</TimeIntervalForDateScale>
    <DateFormat>Auto</DateFormat>
    <CustomPalette />
    <TableData />
  </MainPivotConfig>
  <OutputDataGridConfig Name="Open Requests">
    <SQL>---Begin Main Query---
SELECT
	NumberURL,
	State,
	Location,
	Area,
	Process,
	Requestor,
	AssignedTo,
	CreatedOn,
	NeedDate,
	EstimatedDelivery,
	Description,
	ROI,
	Category,
	CEID,
	Priority,
	LastUpdateBy,
	LogUpdate,
	LogType
USING
	strcat('&lt;a href="', Link) as temp,
	strcat(temp, '"&gt;') as temp2,
	strcat(temp2, to_string(Number)) as temp3,
	strcat(temp3, '&lt;/a&gt;') as NumberURL
FROM
	%{OUTPUT}
WHERE
	not isinlist(State, '%Complete') and (isinlist(Location, '@{SR_SITES}') or location is null)
ORDER BY
	NeedDate desc
</SQL>
    <TableLayoutConfig>
      <BoundColumnList>Number,Link,State,Area,Location,Process,CreatedOn,UpdatedOn,Description,CustomerUserName,CustomerEmail</BoundColumnList>
    </TableLayoutConfig>
    <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NumberURL" type="xs:string" minOccurs="0" />
              <xs:element name="State" type="xs:string" minOccurs="0" />
              <xs:element name="Location" type="xs:string" minOccurs="0" />
              <xs:element name="Area" type="xs:string" minOccurs="0" />
              <xs:element name="Process" type="xs:string" minOccurs="0" />
              <xs:element name="Requestor" type="xs:string" minOccurs="0" />
              <xs:element name="AssignedTo" type="xs:string" minOccurs="0" />
              <xs:element name="CreatedOn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="NeedDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="EstimatedDelivery" type="xs:string" minOccurs="0" />
              <xs:element name="Description" type="xs:string" minOccurs="0" />
              <xs:element name="ROI" type="xs:string" minOccurs="0" />
              <xs:element name="Category" type="xs:string" minOccurs="0" />
              <xs:element name="CEID" type="xs:string" minOccurs="0" />
              <xs:element name="Priority" type="xs:int" minOccurs="0" />
              <xs:element name="LastUpdateBy" type="xs:string" minOccurs="0" />
              <xs:element name="LogUpdate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="LogType" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
    <TableData />
  </OutputDataGridConfig>
  <OutputDataGridConfig Name="Closed Requests" IncludeInBody="false" IncludeInAttachment="true">
    <SQL>---Begin Main Query---
SELECT
	NumberURL,
	State,
	Location,
	Area,
	Process,
	AssignedTo,
	CreatedOn,
	UpdatedOn,
	NeedDate,
	EstimatedDelivery,
	Description,
	ROI,
	Category,
	CEID
USING
	strcat('&lt;a href="', Link) as temp,
	strcat(temp, '"&gt;') as temp2,
	strcat(temp2, to_string(Number)) as temp3,
	strcat(temp3, '&lt;/a&gt;') as NumberURL
FROM
	%{OUTPUT}
WHERE
	State='Complete' and
	applytimerangefilter(UpdatedOn, 'last 1 month')
ORDER BY
	UpdatedOn desc
</SQL>
    <TableLayoutConfig>
      <BoundColumnList>Number,Link,State,Area,Location,Process,CreatedOn,UpdatedOn,Description,CustomerUserName,CustomerEmail</BoundColumnList>
    </TableLayoutConfig>
    <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NumberURL" type="xs:string" minOccurs="0" />
              <xs:element name="State" type="xs:string" minOccurs="0" />
              <xs:element name="Location" type="xs:string" minOccurs="0" />
              <xs:element name="Area" type="xs:string" minOccurs="0" />
              <xs:element name="Process" type="xs:string" minOccurs="0" />
              <xs:element name="AssignedTo" type="xs:string" minOccurs="0" />
              <xs:element name="CreatedOn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Updatedon" type="xs:dateTime" minOccurs="0" />
              <xs:element name="NeedDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="EstimatedDelivery" type="xs:string" minOccurs="0" />
              <xs:element name="Description" type="xs:string" minOccurs="0" />
              <xs:element name="ROI" type="xs:string" minOccurs="0" />
              <xs:element name="Category" type="xs:string" minOccurs="0" />
              <xs:element name="CEID" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
    <TableData />
  </OutputDataGridConfig>
  <OutputDataGridConfig Name="Week" IncludeInBody="false" IncludeInAttachment="true">
    <SQL>---Begin Main Query---
SELECT
	NumberURL,
	State,
	Location,
	Area,
	Process,
	AssignedTo,
	CreatedOn,
	UpdatedOn,
	NeedDate,
	EstimatedDelivery,
	Description,
	ROI,
	Category,
	CEID
USING
	strcat('&lt;a href="', Link) as temp,
	strcat(temp, '"&gt;') as temp2,
	strcat(temp2, to_string(Number)) as temp3,
	strcat(temp3, '&lt;/a&gt;') as NumberURL
FROM
	%{OUTPUT}
WHERE
	State='Complete' and
	applytimerangefilter(UpdatedOn, 'last 1 week')
ORDER BY
	UpdatedOn desc
</SQL>
    <TableLayoutConfig>
      <BoundColumnList>Number,Link,State,Area,Location,Process,CreatedOn,UpdatedOn,Description,CustomerUserName,CustomerEmail</BoundColumnList>
    </TableLayoutConfig>
    <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NumberURL" type="xs:string" minOccurs="0" />
              <xs:element name="State" type="xs:string" minOccurs="0" />
              <xs:element name="Location" type="xs:string" minOccurs="0" />
              <xs:element name="Area" type="xs:string" minOccurs="0" />
              <xs:element name="Process" type="xs:string" minOccurs="0" />
              <xs:element name="AssignedTo" type="xs:string" minOccurs="0" />
              <xs:element name="CreatedOn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Updatedon" type="xs:dateTime" minOccurs="0" />
              <xs:element name="NeedDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="EstimatedDelivery" type="xs:string" minOccurs="0" />
              <xs:element name="Description" type="xs:string" minOccurs="0" />
              <xs:element name="ROI" type="xs:string" minOccurs="0" />
              <xs:element name="Category" type="xs:string" minOccurs="0" />
              <xs:element name="CEID" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
    <TableData />
  </OutputDataGridConfig>
  <AutoPivotConfig OutputDateFormat="yyyy ww.w hh tt" />
  <MailConfig>
    <PostProcessingSQL Enable="false" />
    <EmailCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
      <Script />
    </EmailCondition>
    <PostProcessingCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
    </PostProcessingCondition>
    <CopyCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
    </CopyCondition>
    <SMTPServer>smtp.intel.com</SMTPServer>
    <From>LogAnalyzer2@intel.com</From>
    <ReplyTo>@{DASHBOARD_OWNER_ALERT_DIST}</ReplyTo>
    <To />
    <Subject>[${DOMAIN}] Request Data</Subject>
    <Body />
    <MailAttachments FileNamingFormat="${SETTINGS}" Excel="false" LAS="false" LAD="false" Exceptions="false" StatusLogs="false" PivotChart="false" ZipAttachments="false" DoNotSendAttachmentsWithEmail="false" IncludeJobStatisticsHeader="false" IncludeQuerySettingsFileHeader="false" IncludeVariableDefinitionHeader="false" IncludeRowCountInSubject="false" />
    <IncludeSQLQueryInBody>false</IncludeSQLQueryInBody>
    <TableInBody Enable="false">
      <SQL />
    </TableInBody>
    <CopyOutputToDirectory>true</CopyOutputToDirectory>
    <OutputDirectory>@{DASHBOARD_PERSIST_DATA}\PCAM\Output</OutputDirectory>
    <IncludeAutoPivotSummary>false</IncludeAutoPivotSummary>
    <IncludeCustomPivotSummary>false</IncludeCustomPivotSummary>
    <IgnoreExceptions>true</IgnoreExceptions>
    <OnlyCopyOutputIfEmailConditionIsMet>false</OnlyCopyOutputIfEmailConditionIsMet>
  </MailConfig>
  <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Number" type="xs:string" minOccurs="0" />
              <xs:element name="Urgency" type="xs:string" minOccurs="0" />
              <xs:element name="Link" type="xs:string" minOccurs="0" />
              <xs:element name="State" type="xs:string" minOccurs="0" />
              <xs:element name="Area" type="xs:string" minOccurs="0" />
              <xs:element name="Location" type="xs:string" minOccurs="0" />
              <xs:element name="Process" type="xs:string" minOccurs="0" />
              <xs:element name="AssignedTo" type="xs:string" minOccurs="0" />
              <xs:element name="Requestor" type="xs:string" minOccurs="0" />
              <xs:element name="Requestor_Manager" type="xs:int" minOccurs="0" />
              <xs:element name="CreatedOn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Updatedon" type="xs:dateTime" minOccurs="0" />
              <xs:element name="NeedDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="EstimatedDelivery" type="xs:string" minOccurs="0" />
              <xs:element name="Description" type="xs:string" minOccurs="0" />
              <xs:element name="Category" type="xs:string" minOccurs="0" />
              <xs:element name="ROI" type="xs:string" minOccurs="0" />
              <xs:element name="CEID" type="xs:string" minOccurs="0" />
              <xs:element name="Priority" type="xs:int" minOccurs="0" />
              <xs:element name="LastUpdateBy" type="xs:string" minOccurs="0" />
              <xs:element name="LogUpdate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="LogType" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
  <TableData />
  <LastRunAbsoluteDateFilter />
  <PivotGroupingSettings Enable="true" PivotColumn="Category">
    <SortyByColumn>Count</SortyByColumn>
  </PivotGroupingSettings>
  <QuerySQL><![CDATA[
--[FileName:"T:\Dashboard\Jobs\PCAM\15-min\1_ISMP_Request_Query_All.lasx"]------
----------<VARIABLES>------------
var TIMEFILTER = "All"
var SQL_NODE = "@{ISMP_SQL_NODE}"
var CATALOG = "@{ISMP_CATALOG}"
var TASKLINK = "https://itsm.intel.com/sc_task.do?sysparm_query=request_itemSTARTSWITH"
var NEW_QUERY = "select t.Number, t.Location as site, t.Priority as Urgency, t.State, t.AssigneeUserName, t.CreatedOn, t.Updatedon, t.Description, t.CustomerUserName, t.CustomerEmail, t.CustomerManagerEmployeeId, t.ConfigurationItem as Area, t.Parameters, t.EstimatedDelivery
from tblWebServiceRequests t WITH (NOLOCK)
where (t.service = 'Fab Sort Manufacturing Automation' or t.service = 'Shop Floor Control and Integration')
and (t.ServiceComponent like 'FS PCAM%' or  
    t.Supportskill like '%PCAM%' or 
    t.Supportskill like 'SFCI PIC%' or
    t.Supportskill like 'SFCI Die%' or
    t.Supportskill like '%Station Controllers' or
    t.Supportskill='SFCI Equipment Modeling' or
    t.Supportskill='SFCI Wip Modeling' or
    t.Supportskill='SFCI Scheduler Rules')
and t.state not like 'Closed Skipped'
and t.processrole = 'Request Specialist Level 2' 
order by CreatedOn desc"
var ACTIVITYLOG_MAIL_QUERY = "select t1.Number, t1.CreatedBy as LastUpdateBy, t1.CreatedOn, t1.LogType
from
(select Number, max(CreatedOn) as Maxid
from tblwebservicerequestactivitylogs
where LogType = 'Email' and CreatedBy <> 'system'
group by Number) t2
join tblwebservicerequestactivitylogs t1
on t2.Number = t1.Number
and t2.Maxid = t1.CreatedOn"
var ACTIVITYLOG_WORKNOTE_QUERY = "select t1.id, t1.Number, t1.CreatedBy as LastUpdateBy, t1.CreatedOn, t1.LogType
from
(select Number, max(CreatedOn) as Maxid
from tblwebservicerequestactivitylogs
where LogType = 'WorkNote' 
group by Number) t2
join tblwebservicerequestactivitylogs t1
on t2.Number = t1.Number
and t2.Maxid = t1.CreatedOn"
---[ALMAIL_CSV]---
BEGIN ALMAIL_CSV
	UseMethod QueryOLEDB with -- **Run an OLEDB query**
		ConnectionString = "Provider=SQLOLEDB.1;User ID=Barnum_Reader;Password=9JJ4FnImoODJ252pKFIy;Persist Security Info=True;Data Source=${SQL_NODE}; Initial Catalog=${CATALOG};" -- OLEDB connection string [String]
		Query = "${ActivityLog_Mail_Query}" -- SQL Query to run against OLEDB provider [String]
END ALMAIL_CSV
---[ALWN_CSV]---
BEGIN ALWN_CSV
	UseMethod QueryOLEDB with -- **Run an OLEDB query**
		ConnectionString = "Provider=SQLOLEDB.1;User ID=Barnum_Reader;Password=9JJ4FnImoODJ252pKFIy;Persist Security Info=True;Data Source=${SQL_NODE}; Initial Catalog=${CATALOG};" -- OLEDB connection string [String]
		Query = "${ActivityLog_WorkNote_Query}" -- SQL Query to run against OLEDB provider [String]
END ALWN_CSV
---[MERGE_CSV]---
BEGIN MERGE_CSV
	UseMethod MergeTables with -- **Merge content of two tables by doing an outer join on the column schema (no join done here)**
		InputFile1 = "%{ALMail_CSV}" -- Input CSV File #1 containing table data [String]
		InputFile2 = "%{ALWN_CSV}" -- Input CSV File #2 containing table data [String]
		AutoDetectColumnTypes = false -- Auto-detect column types before merging [Boolean]
END MERGE_CSV
---[RAW_CSV]---
BEGIN RAW_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		Number, LastUpdateBy, CreatedOn as LogUpdate, LogType
	FROM
		%{merge_csv}
	ORDER BY
		LogUpdate desc
END RAW_CSV
---[GETMAX_CSV]---
BEGIN GETMAX_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		Number, maxid as LogUpdate
	USING
		Max(LogUpdate) as maxid
	FROM
		%{raw_csv}
	GROUP BY
		Number
END GETMAX_CSV
---[ALJOIN_CSV]---
BEGIN ALJOIN_CSV
	UseMethod Join with -- **Do an outer join for two tables based on a matching column**
		InputFile1 = "%{raw_csv}" -- Input CSV File #1 containing table data [String]
		InputFile2 = "%{getmax_csv}" -- Input CSV File #2 containing table data [String]
		JoinColumn = "Number,LogUpdate" -- Column name(s) on which to join the two tables (more than one column can be supplied by using comma as a separator) [String]
		IgnoreDuplicate = false -- Flag to ignore duplicate items in the JoinColumn [Boolean]
		IgnoreCase = false -- Flag to ignore case in the JoinColumn [Boolean]
		OnlyShowNonMatchingRows = false -- Flag to only show non-matching orphan rows [Boolean]
		IncludeNonMatchingRows = false -- Flag to also include non-matching orphan rows (but with blank entries) [Boolean]
		MustIncludeOutputColumns = "" -- Name of columns (comma-separated) that must be included in output even if the join does not materialize [String]
		OrderBy = "" -- Name of column(s) to sort the resulting table by [String]
END ALJOIN_CSV
---[NEW_CSV]---
BEGIN NEW_CSV
	UseMethod QueryOLEDB with -- **Run an OLEDB query**
		ConnectionString = "Provider=SQLOLEDB.1;User ID=Barnum_Reader;Password=9JJ4FnImoODJ252pKFIy;Persist Security Info=True;Data Source=${SQL_NODE}; Initial Catalog=${CATALOG};" -- OLEDB connection string [String]
		Query = "${New_QUERY}" -- SQL Query to run against OLEDB provider [String]
END NEW_CSV
---[NEWFULL_CSV]---
BEGIN NEWFULL_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		distinct
		Number,
		Urgency,
		Link,
		State,
		Area,
		Location,
		Process,
		AssigneeUserName as AssignedTo,
		CustomerUserName as Requestor,
		CustomerManagerEmployeeId as Requestor_Manager,
		CreatedOn,
		UpdatedOn,
		NeedDate,
		EstimatedDelivery,
		Description,
		Category,
		ROI,
		CEID,
		Priority
	USING
		strcat('${TaskLink}',Number) as Link,
		substr(extract_token(extract_token(Parameters, 1, 'location</Name>'), 0, '</Value>'), 43) as Locationtmp,
		substr(extract_token(extract_token(Parameters, 1, 'process</Name>'), 0, '</Value>'), 43) as Processtmp,
		substr(extract_token(extract_token(Parameters, 1, 'request_type</Name>'), 0, '</Value>'), 43) as Category,
		substr(extract_token(extract_token(Parameters, 1, 'justification</Name>'), 0, '</Value>'), 43) as ROItmp,
		substr(substr(extract_token(extract_token(Parameters, 1, 'ceid</Name>'), 0, '</Value>'), 43),0,20) as CEID,
		substr(extract_token(extract_token(Parameters, 1, 'requested_by_date</Name>'), 0, '</Value>'), 43) as NeedDate,
		case substr(Processtmp, 0, 2) when '/>' then ' ' else Processtmp end as Process,
		case substr(Locationtmp, 0, 2) when '/>' then ' ' else Locationtmp end as Location1,
		case site when null then Location1 else site end as Location,
		case substr(ROItmp, 0, 2) when '/>' then 'Quality - Avoid Misprocessing Risk' else replace_str(replace_chr(ROItmp, ' \u00E2\u20AC\u201C', ' '), '     ', ' - ') end as ROI,
		case ROI
		when 'Quality - Avoid Misprocessing Risk' then 2
		when 'Output - Fab Limiter - Improve Cycle Time' then 2
		when 'Output - Improve Cycle Time' then 3
		when 'CE! Matching' then 3
		when 'VF Transfer' then 3
		when 'Other (General Request)' then 3
		when 'Output - Tool Qual / Install' then 4
		when 'Path Finding' then 4
		when 'Clean Up' then 5
		else 3 end as Prioritytmp,
		case Urgency when 'High' then 1 when 'Critical' then 1 else Prioritytmp end as Priority
	FROM
		%{new_csv}
	WHERE
		not isinlist(Category,'%SFC Fuzion%')
	ORDER BY
		CreatedOn asc
END NEWFULL_CSV
---[FINALJOIN_CSV]---
BEGIN FINALJOIN_CSV
	UseMethod Join with -- **Do an outer join for two tables based on a matching column**
		InputFile1 = "%{NEWFULL_CSV}" -- Input CSV File #1 containing table data [String]
		InputFile2 = "%{ALjoin_CSV}" -- Input CSV File #2 containing table data [String]
		InputFile3 = "" -- Input CSV File #3 containing table data (optional) [String]
		InputFile4 = "" -- Input CSV File #4 containing table data (optional) [String]
		InputFile5 = "" -- Input CSV File #5 containing table data (optional) [String]
		InputFile6 = "" -- Input CSV File #6 containing table data (optional) [String]
		JoinColumn = "Number" -- Column name(s) on which to join the two tables (more than one column can be supplied by using comma as a separator) [String]
		IgnoreDuplicate = true -- Flag to ignore duplicate items in the JoinColumn [Boolean]
		IgnoreCase = false -- Flag to ignore case in the JoinColumn [Boolean]
		OnlyShowNonMatchingRows = false -- Flag to only show non-matching orphan rows [Boolean]
		IncludeNonMatchingRows = true -- Flag to also include non-matching orphan rows (but with blank entries) [Boolean]
		MustIncludeOutputColumns = "" -- Name of columns (comma-separated) that must be included in output even if the join does not materialize [String]
		OrderBy = "" -- Name of column(s) to sort the resulting table by [String]
END FINALJOIN_CSV
---[FINAL_CSV]---
BEGIN FINAL_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		*
	FROM
		%{FINALJOIN_CSV}
	WHERE
		isinlist(Location, '@{SR_SITES}') or location is null
END FINAL_CSV
---Begin Main Query---
Using CSV with
SELECT
	*
FROM
	%{FINAL_CSV}
WHERE
	location not like 'ATT%' or Category like 'WIP - Operation%'

]]></QuerySQL>
</QueryConfig>