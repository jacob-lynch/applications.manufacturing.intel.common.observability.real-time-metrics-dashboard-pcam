<QueryConfig AutoExecuteQueryOnLoad="false">
  <ChangeLog>Changed by AMR\mfg_dmdavies on 2/7/2013 3:04:00 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.6.30206.1945</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 2/7/2013 3:03:22 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.6.30206.1945</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 1/29/2013 1:55:53 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.6.30127.2007</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 1/28/2013 11:32:57 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.6.30127.2007</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 1/24/2013 10:43:04 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.6.30123.0758</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 1/23/2013 4:32:28 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.6.30123.0758</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 1/9/2013 4:38:27 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.6.30106.2121</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 1/1/2013 1:13:53 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20418.1202</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 1/1/2013 1:12:54 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20418.1202</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 1/1/2013 1:05:38 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20418.1202</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/28/2012 3:19:57 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20418.1202</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/28/2012 3:18:23 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20418.1202</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/28/2012 2:27:30 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20418.1202</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/31/2012 9:47:22 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.21030.1307</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/18/2012 1:15:01 PM from F32PTS215.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20710.1639</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/18/2012 10:45:40 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20917.2301</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/17/2012 9:04:16 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20913.2336</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/17/2012 7:55:55 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20913.2336</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/17/2012 7:54:32 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20913.2336</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 8/30/2012 3:34:48 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20829.2110</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 5/1/2012 1:37:15 PM from F32PTS215.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.4.11119.2328</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 4/9/2012 2:00:43 PM from F32PTS215.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.4.11119.2328</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 4/6/2012 4:28:00 PM from F32PTS215.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.4.11119.2328</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 3/29/2012 10:37:28 AM from F32PTS215.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.4.11119.2328</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 3/28/2012 1:23:27 PM from F32PTS215.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.4.11119.2328</ChangeLog>
  <QueryAttributes>
    <OutputDateFormat>MM/dd/yyyy ww.w</OutputDateFormat>
    <AlwaysReplaceDomainWithLocal>false</AlwaysReplaceDomainWithLocal>
  </QueryAttributes>
  <PostQuerySQL>select * from %{OUTPUT}</PostQuerySQL>
  <TableLayoutConfig />
  <TabOrder>C0</TabOrder>
  <MainPivotConfig>
    <ColumnX FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnY FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnData FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <TableData />
  </MainPivotConfig>
  <AutoPivotConfig OutputDateFormat="yyyy ww.w hh tt" />
  <MailConfig>
    <PostProcessingSQL Enable="false" />
    <EmailCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
      <Script />
    </EmailCondition>
    <PostProcessingCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
    </PostProcessingCondition>
    <CopyCondition Enable="false" ThresholdRowCount="0">
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
    </CopyCondition>
    <SMTPServer>smtp.intel.com</SMTPServer>
    <From>LogAnalyzer2@intel.com</From>
    <ReplyTo>todd.c.alford@intel.com</ReplyTo>
    <To />
    <Subject>[${DOMAIN}] Web_ntsc_uicontrol</Subject>
    <Body />
    <OnlyProcessIfOutputChangedFromPreviousRun>false</OnlyProcessIfOutputChangedFromPreviousRun>
    <MailAttachments FileNamingFormat="${SETTINGS}" Excel="false" CSV="false" LAS="false" LAD="false" Exceptions="false" StatusLogs="false" PivotChart="false" ZipAttachments="false" DoNotSendAttachmentsWithEmail="false" />
    <IncludeSQLQueryInBody>false</IncludeSQLQueryInBody>
    <TableInBody Enable="false">
      <SQL />
    </TableInBody>
    <CopyOutputToDirectory>false</CopyOutputToDirectory>
    <OutputDirectory />
    <IncludeAutoPivotSummary>false</IncludeAutoPivotSummary>
    <IgnoreExceptions>false</IgnoreExceptions>
    <OnlyCopyOutputIfEmailConditionIsMet>false</OnlyCopyOutputIfEmailConditionIsMet>
  </MailConfig>
  <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="WorkWeek" type="xs:string" minOccurs="0" />
              <xs:element name="Winclients_x0020_Built" type="xs:string" minOccurs="0" />
              <xs:element name="Station_x0020_Controllers_x0020_Configured" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
  <TableData />
  <LastRunAbsoluteDateFilter />
  <PivotGroupingSettings PivotColumn="">
    <SortyByColumn>Count</SortyByColumn>
  </PivotGroupingSettings>
  <QuerySQL><![CDATA[
--[FileName:"W:\Dashboard\Web\PCAM\LA2 Scripts\Web_TIPR_Metrics.lasx"]------
----------<VARIABLES>------------
var FILEFILTER = "@{DASHBOARD_LOCAL_WEB}\PCAM\Output\TIPR_Metrics.htm"
---[MAIN_CSV]---
BEGIN MAIN_CSV
	---Begin Main Query---
	Using LA2REPORT with
		TableIndex = 1
	SELECT
		Entity,
		FinishDate,
		CapCode
	FROM
		'${FILEFILTER}'
END MAIN_CSV
---[PCAM_CSV]---
BEGIN PCAM_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		FinishDate,
		Entity as PCAM
	FROM
		%{MAIN_CSV}
	WHERE
		CapCode = 'PCAM' and FinishDate is not Null
	ORDER BY
		FinishDate,
		Entity
END PCAM_CSV
---[MERGE_CSV]---
BEGIN MERGE_CSV
	UseMethod MergeRows with -- **Merge consecutive rows in a given table based on matching column values**
		InputFiles = "%{PCAM_CSV}" -- Input files (comma-separated) containing table data [String]
		MergeKeyColumn = "FinishDate" -- Column to use for comparing values between consecutive rows before merging [String]
		ColumnsToMerge = "PCAM" -- Columns (comma-separated) whose values will be merged [String]
		LineSeparator = ", " -- Line separator to use when merging consecutive consecutive rows [String]
		MaxRowsToMerge = -1 -- Maximum number of rows to merge [Int32]
		MaxCellSizeInBytes = 100000 -- Maximum size of merged cell in bytes [Int32]
		TimeOutInSeconds = -1 -- Method time-out in seconds (specify -1 for infinite) [Int32]
END MERGE_CSV
---[WC_CSV]---
BEGIN WC_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		FinishDate,
		Entity as WC
	FROM
		%{MAIN_CSV}
	WHERE
		CapCode = 'WC' and FinishDate is not Null
	ORDER BY
		FinishDate,
		Entity
END WC_CSV
---[MERGE2_CSV]---
BEGIN MERGE2_CSV
	UseMethod MergeRows with -- **Merge consecutive rows in a given table based on matching column values**
		InputFiles = "%{WC_CSV}" -- Input files (comma-separated) containing table data [String]
		MergeKeyColumn = "FinishDate" -- Column to use for comparing values between consecutive rows before merging [String]
		ColumnsToMerge = "WC" -- Columns (comma-separated) whose values will be merged [String]
		LineSeparator = ", " -- Line separator to use when merging consecutive consecutive rows [String]
		MaxRowsToMerge = -1 -- Maximum number of rows to merge [Int32]
		MaxCellSizeInBytes = 100000 -- Maximum size of merged cell in bytes [Int32]
		TimeOutInSeconds = -1 -- Method time-out in seconds (specify -1 for infinite) [Int32]
END MERGE2_CSV
---[JOIN_CSV]---
BEGIN JOIN_CSV
	UseMethod Join with -- **Do an outer join for two tables based on a matching column**
		InputFile1 = "%{MERGE_CSV}" -- Input CSV File #1 containing table data [String]
		InputFile2 = "%{MERGE2_CSV}" -- Input CSV File #2 containing table data [String]
		JoinColumn = "FinishDate" -- Column name(s) on which to join the two tables (more than one column can be supplied by using comma as a separator) [String]
		IgnoreDuplicate = true -- Flag to ignore duplicate items in the JoinColumn [Boolean]
		IgnoreCase = false -- Flag to ignore case in the JoinColumn [Boolean]
		OnlyShowNonMatchingRows = false -- Flag to only show non-matching orphan rows [Boolean]
		IncludeNonMatchingRows = true -- Flag to also include non-matching orphan rows (but with blank entries) [Boolean]
		MustIncludeOutputColumns = "" -- Name of columns (comma-separated) that must be included in output even if the join does not materialize [String]
		TimeOutInSeconds = -1 -- Method time-out in seconds (specify -1 for infinite) [Int32]
END JOIN_CSV
---Begin Main Query---
Using CSV with
SELECT
	top 2
	FinishDate as [Work Week],
	WC as [Winclients Built],
	PCAM as [Station Controllers Configured]
FROM
	%{JOIN_CSV}
ORDER BY
	[Work Week] desc

]]></QuerySQL>
</QueryConfig>