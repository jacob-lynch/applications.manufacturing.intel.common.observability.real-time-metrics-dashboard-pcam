<QueryConfig AutoExecuteQueryOnLoad="false" PreventSQLBeautification="false">
  <ChangeLog>Changed by GER\mfg_hgurarie on 8/20/2017 2:18:04 PM from F28PAP216N11.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 8/17/2017 12:55:29 PM from F28PAP216N11.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.61013.0546</ChangeLog>
  <ChangeLog>Changed by GER\mfg_rlouk on 11/10/2016 5:40:43 PM from F28PTS215N1.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.1053</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 6/6/2016 10:44:38 AM from F28PAP216N1.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.1153</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 4/14/2016 3:22:09 PM from F28PAP216N1.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.1153</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 4/14/2016 3:20:38 PM from F28PAP216N1.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.1153</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 4/14/2016 3:15:07 PM from F28PAP216N1.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.1153</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 3/8/2016 4:18:46 PM from F28PAP216N1.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.1153</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 3/8/2016 2:45:16 PM from F28PAP216N1.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.1153</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 3/7/2016 3:40:07 PM from F28PAP216N1.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.9.51126.1153</ChangeLog>
  <ChangeLog>Changed by GER\mfg_hgurarie on 12/13/2015 11:00:43 AM from F28PAP216N2.F28PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.0943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 11/5/2015 11:42:14 AM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 11/5/2015 11:30:39 AM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 11/5/2015 11:27:53 AM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 11/5/2015 11:21:23 AM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/22/2015 1:47:29 PM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/22/2015 1:40:20 PM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/20/2015 12:29:21 PM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/20/2015 12:29:06 PM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/20/2015 12:27:34 PM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/20/2015 12:27:19 PM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/20/2015 12:21:34 PM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/19/2015 4:54:17 PM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/19/2015 12:41:18 PM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/19/2015 10:05:16 AM from F32PAP216N3.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <QueryAttributes>
    <OutputDateFormat>MM/dd/yyyy</OutputDateFormat>
    <AlwaysReplaceDomainWithLocal>false</AlwaysReplaceDomainWithLocal>
  </QueryAttributes>
  <PostQuerySQL>select * from %{OUTPUT}</PostQuerySQL>
  <TableLayoutConfig>
    <BoundColumnList>ID,MCCB Description,CEID,ChangeDate,PFIContact,OSAChange</BoundColumnList>
  </TableLayoutConfig>
  <TabOrder>C0</TabOrder>
  <MainPivotConfig>
    <ColumnX FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnY FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnData FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <CustomPalette />
    <TableData />
  </MainPivotConfig>
  <AutoPivotConfig OutputDateFormat="yyyy ww.w hh tt" />
  <MailConfig>
    <PostProcessingSQL Enable="false" />
    <EmailCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
      <Script />
    </EmailCondition>
    <PostProcessingCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
    </PostProcessingCondition>
    <CopyCondition Enable="false" ThresholdRowCount="0">
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
    </CopyCondition>
    <SMTPServer>smtp.intel.com</SMTPServer>
    <From>LogAnalyzer2@intel.com</From>
    <ReplyTo>todd.c.alford@intel.com</ReplyTo>
    <To />
    <Subject>[${DOMAIN}] Web_ntsc_uicontrol</Subject>
    <Body />
    <MailAttachments FileNamingFormat="${SETTINGS}" Excel="false" CSV="false" LAS="false" LAD="false" Exceptions="false" StatusLogs="false" PivotChart="false" ZipAttachments="false" DoNotSendAttachmentsWithEmail="false" />
    <IncludeSQLQueryInBody>false</IncludeSQLQueryInBody>
    <TableInBody Enable="false">
      <SQL />
    </TableInBody>
    <CopyOutputToDirectory>false</CopyOutputToDirectory>
    <OutputDirectory />
    <IncludeAutoPivotSummary>false</IncludeAutoPivotSummary>
    <IgnoreExceptions>false</IgnoreExceptions>
    <OnlyCopyOutputIfEmailConditionIsMet>false</OnlyCopyOutputIfEmailConditionIsMet>
  </MailConfig>
  <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" type="xs:int" minOccurs="0" />
              <xs:element name="MCCB" type="xs:string" minOccurs="0" />
              <xs:element name="Process" type="xs:string" minOccurs="0" />
              <xs:element name="Site" type="xs:string" minOccurs="0" />
              <xs:element name="State" type="xs:string" minOccurs="0" />
              <xs:element name="Transfer_x0020_Date" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Area" type="xs:string" minOccurs="0" />
              <xs:element name="Type" type="xs:string" minOccurs="0" />
              <xs:element name="MCCB_x0020_Description" type="xs:string" minOccurs="0" />
              <xs:element name="Approval_x0020_requested" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Approval_x0020_Received" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Comment" type="xs:string" minOccurs="0" />
              <xs:element name="ChangeType" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
  <TableData />
  <LastRunAbsoluteDateFilter />
  <PivotGroupingSettings Enable="true" PivotColumn="Type">
    <SortyByColumn>Count</SortyByColumn>
  </PivotGroupingSettings>
  <QuerySQL><![CDATA[
--[FileName:"R:\Dashboard\Web\PCAM\LA2 Scripts\Web_CapabilityMCCB.lasx"]------
----------<VARIABLES>------------
var FILEFILTER = "@{DASHBOARD_LOCAL_WEB}\PCAM\Output\ALL_MCCB.csv"
var FILEFILTER2 = "@{DASHBOARD_LOCAL_WEB}\PCAM\Output\Global_MCCB.csv"
var MCCBFILTER = "Done, NA, Cancel, Divergence"
var 1274MCCB = "http://autosp.rf3prod.mfg.intel.com/sites/AutoXfer/PCAM/127475%20PCAM%20MCCB/"
var 1272MCCB = "http://autosp.rf3prod.mfg.intel.com/sites/AutoXfer/PCAM/127273%20PCAM%20MCCB/"
var 1270MCCB = "http://autosp.rf3prod.mfg.intel.com/sites/AutoXfer/PCAM/127071%20PCAM%20MCCB/"
var 1270EOLMCCB = "http://autosp.rf3prod.mfg.intel.com/sites/AutoXfer/PCAM/300mm%20PCAM%20MCCB/"
var GLOBALMCCB = "http://autosp.rf3prod.mfg.intel.com/sites/AutoXfer/PCAM/300mm%20Global%20PCAM%20MCCB/"
var 300SORTMCCB = "http://autosp.rf3prod.mfg.intel.com/sites/AutoXfer/PCAM/300mm%20PCAM%20Sort%20MCCB/"
var SUPPORTSITEVIEW = "@{SUPPORTSITEVIEW}"
var AFOMCCBSTATUS = "@{AFOMCCBSTATUS}"
var D1CMCCBSTATUS = "@{D1CMCCBSTATUS}"
var D1DMCCBSTATUS = "@{D1DMCCBSTATUS}"
var F11XMCCBSTATUS = "@{F11xMCCBSTATUS}"
var F24MCCBSTATUS = "@{F24MCCBSTATUS}"
var F28MCCBSTATUS = "@{F28MCCBSTATUS}"
var OSAMCCBSTATUS = "@{OSAMCCBSTATUS}"
var COMEMBERS = "@{COMembers}"
---[OSA_CSV]---
BEGIN OSA_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		ID,
		MCCB,
		Process,
		'OSA' as Site,
		OSAChange as State,
		TxfrDate as [Transfer Date],
		Area,
		Name as [MCCB Description],
		OSAApprovalRequested as [Approval requested],
		OSAApprovalReceived as [Approval Received],
		[OSA Local Comments] as Comment,
		Type,
		ChangeType,
		OSACompletedBy as CompletedBy,
		OSAOwnedBy as owner
	USING
		CASE 'Yes' when E3 then 'E3' when WIP then 'WIP' when SC then 'SC' when FSUI then 'FSUI'
		when Level78Change then 'L78' when MES300 then 'MES' when SPC then 'SPC' when TWT then 'TWT' else 'Other' end as Type,
		CASE to_string(MCCBSite) when '1272' then '1272' when 'New' then '1270' when 'Old' then '1270' when '1274' then '1274' else to_string(MCCBSite) end as Process,
		CASE to_string(MCCBSite) when 'Old' then strcat('${1270EOLMCCB}', to_string(Name)) when 'New' then strcat('${1270MCCB}', to_string(Name)) when 'Sort' then strcat('${300SortMCCB}', to_string(Name)) when '1272' then strcat('${1272MCCB}', to_string(Name)) when '1274' then strcat('${1274MCCB}', to_string(Name)) else NULL end as MCCB
	FROM
		'${FILEFILTER}'
	WHERE
		(ChangeType like 'Pending'
		OR (ChangeType like 'Final' AND (NOT IsInList(State, '${MCCBFILTER}') AND State IS NOT NULL)))
	ORDER BY
		Process, ID desc
END OSA_CSV
---[OSAGLOBAL_CSV]---
BEGIN OSAGLOBAL_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		ID,
		MCCB,
		'Global' as Process,
		'OSA' as Site,
		OSAChange as State,
		TxfrDate as [Transfer Date],
		Area,
		Name as [MCCB Description],
		OSAApprovalRequested as [Approval requested],
		OSAApprovalReceived as [Approval Received],
		[OSA Local Comments] as Comment,
		'Global' as Type,
		ChangeType,
		OSACompletedBy as CompletedBy,
		OSAOwnedBy as owner
	USING
		strcat('${GLOBALMCCB}', to_string(Name)) as MCCB
	FROM
		'${FILEFILTER2}'
	WHERE
		(ChangeType like 'Pending'
		OR (ChangeType like 'Final' AND (NOT IsInList(State, '${MCCBFILTER}') AND State IS NOT NULL)))
	ORDER BY
		Process, ID desc
END OSAGLOBAL_CSV
---[F24_CSV]---
BEGIN F24_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		ID,
		MCCB,
		Process,
		'F24' as Site,
		F24Change as State,
		TxfrDate as [Transfer Date],
		Area,
		Name as [MCCB Description],
		F24ApprovalRequested as [Approval requested],
		F24ApprovalReceived as [Approval Received],
		[F24 Local Comments] as Comment,
		Type,
		ChangeType,
		F24CompletedBy as CompletedBy,
		F24OwnedBy as owner
	USING
		CASE 'Yes' when E3 then 'E3' when WIP then 'WIP' when SC then 'SC' when FSUI then 'FSUI'
		when Level78Change then 'L78' when MES300 then 'MES' when SPC then 'SPC' when TWT then 'TWT' else 'Other' end as Type,
		CASE to_string(MCCBSite) when '1272' then '1272' when 'New' then '1270' when 'Old' then '1270' when '1274' then '1274' else to_string(MCCBSite) end as Process,
		CASE to_string(MCCBSite) when 'Old' then strcat('${1270EOLMCCB}', to_string(Name)) when 'New' then strcat('${1270MCCB}', to_string(Name)) when 'Sort' then strcat('${300SortMCCB}', to_string(Name)) when '1272' then strcat('${1272MCCB}', to_string(Name)) when '1274' then strcat('${1274MCCB}', to_string(Name)) else NULL end as MCCB
	FROM
		'${FILEFILTER}'
	WHERE
		(ChangeType like 'Pending'
		OR (ChangeType like 'Final' AND (NOT IsInList(State, '${MCCBFILTER}') AND State IS NOT NULL)))
	ORDER BY
		Process, ID desc
END F24_CSV
---[F24GLOBAL_CSV]---
BEGIN F24GLOBAL_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		ID,
		MCCB,
		'Global' as Process,
		'F24' as Site,
		F24Change as State,
		TxfrDate as [Transfer Date],
		Area,
		Name as [MCCB Description],
		F24ApprovalRequested as [Approval requested],
		F24ApprovalReceived as [Approval Received],
		[F24 Local Comments] as Comment,
		'Global' as Type,
		ChangeType,
		F24CompletedBy as CompletedBy,
		F24OwnedBy as owner
	USING
		strcat('${GLOBALMCCB}', to_string(Name)) as MCCB
	FROM
		'${FILEFILTER2}'
	WHERE
		(ChangeType like 'Pending'
		OR (ChangeType like 'Final' AND (NOT IsInList(State, '${MCCBFILTER}') AND State IS NOT NULL)))
	ORDER BY
		Process, ID desc
END F24GLOBAL_CSV
---[F28_CSV]---
BEGIN F28_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		ID,
		MCCB,
		Process,
		'F28' as Site,
		F28Change as State,
		TxfrDate as [Transfer Date],
		Area,
		Name as [MCCB Description],
		F28ApprovalRequested as [Approval requested],
		F28ApprovalReceived as [Approval Received],
		[F28 Local Comments] as Comment,
		Type,
		ChangeType,
		F28CompletedBy as CompletedBy,
		F28OwnedBy as owner
	USING
		CASE 'Yes' when E3 then 'E3' when WIP then 'WIP' when SC then 'SC' when FSUI then 'FSUI'
		when Level78Change then 'L78' when MES300 then 'MES' when SPC then 'SPC' when TWT then 'TWT' else 'Other' end as Type,
		CASE to_string(MCCBSite) when '1272' then '1272' when 'New' then '1270' when 'Old' then '1270' when '1274' then '1274' else to_string(MCCBSite) end as Process,
		CASE to_string(MCCBSite) when 'Old' then strcat('${1270EOLMCCB}', to_string(Name)) when 'New' then strcat('${1270MCCB}', to_string(Name)) when 'Sort' then strcat('${300SortMCCB}', to_string(Name)) when '1272' then strcat('${1272MCCB}', to_string(Name)) when '1274' then strcat('${1274MCCB}', to_string(Name)) else NULL end as MCCB
	FROM
		'${FILEFILTER}'
	WHERE
		(ChangeType like 'Pending'
		OR (ChangeType like 'Final' AND (NOT IsInList(State, '${MCCBFILTER}') AND State IS NOT NULL)))
	ORDER BY
		Process, ID desc
END F28_CSV
---[F28GLOBAL_CSV]---
BEGIN F28GLOBAL_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		ID,
		MCCB,
		'Global' as Process,
		'F28' as Site,
		F28Change as State,
		TxfrDate as [Transfer Date],
		Area,
		Name as [MCCB Description],
		F28ApprovalRequested as [Approval requested],
		F28ApprovalReceived as [Approval Received],
		[F28 Local Comments] as Comment,
		'Global' as Type,
		ChangeType,
		F28CompletedBy as CompletedBy,
		F28OwnedBy as owner
	USING
		strcat('${GLOBALMCCB}', to_string(Name)) as MCCB
	FROM
		'${FILEFILTER2}'
	WHERE
		(ChangeType like 'Pending'
		OR (ChangeType like 'Final' AND (NOT IsInList(State, '${MCCBFILTER}') AND State IS NOT NULL)))
	ORDER BY
		Process, ID desc
END F28GLOBAL_CSV
---[F11XGLOBAL_CSV]---
BEGIN F11XGLOBAL_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		ID,
		MCCB,
		'Global' as Process,
		'F11x' as Site,
		F11xChange as State,
		TxfrDate as [Transfer Date],
		Area,
		Name as [MCCB Description],
		F11xApprovalRequested as [Approval requested],
		F11xApprovalReceived as [Approval Received],
		[F11x Local Comments] as Comment,
		'Global' as Type,
		ChangeType,
		F11xCompletedBy as CompletedBy,
		F11xOwnedBy as owner
	USING
		strcat('${GLOBALMCCB}', to_string(Name)) as MCCB
	FROM
		'${FILEFILTER2}'
	WHERE
		(ChangeType like 'Pending'
		OR (ChangeType like 'Final' AND (NOT IsInList(State, '${MCCBFILTER}') AND State IS NOT NULL)))
	ORDER BY
		Process, ID desc
END F11XGLOBAL_CSV
---[MERGEOSA_CSV]---
BEGIN MERGEOSA_CSV
	UseMethod MergeTables with -- **Merge content of two tables by doing an outer join on the column schema (no join done here)**
		InputFile1 = "%{OSA_CSV}" -- Input CSV File #1 containing table data [String]
		InputFile2 = "%{OSAGLOBAL_CSV}" -- Input CSV File #2 containing table data [String]
		AutoDetectColumnTypes = false -- Auto-detect column types before merging [Boolean]
END MERGEOSA_CSV
---[MERGEF24_CSV]---
BEGIN MERGEF24_CSV
	UseMethod MergeTables with -- **Merge content of two tables by doing an outer join on the column schema (no join done here)**
		InputFile1 = "%{F24_CSV}" -- Input CSV File #1 containing table data [String]
		InputFile2 = "%{F24GLOBAL_CSV}" -- Input CSV File #2 containing table data [String]
		AutoDetectColumnTypes = false -- Auto-detect column types before merging [Boolean]
END MERGEF24_CSV
---[MERGEF28_CSV]---
BEGIN MERGEF28_CSV
	UseMethod MergeTables with -- **Merge content of two tables by doing an outer join on the column schema (no join done here)**
		InputFile1 = "%{F28_CSV}" -- Input CSV File #1 containing table data [String]
		InputFile2 = "%{F28GLOBAL_CSV}" -- Input CSV File #2 containing table data [String]
		AutoDetectColumnTypes = false -- Auto-detect column types before merging [Boolean]
END MERGEF28_CSV
---[MERGE1_CSV]---
BEGIN MERGE1_CSV
	UseMethod MergeTables with -- **Merge content of two tables by doing an outer join on the column schema (no join done here)**
		InputFile1 = "%{MergeOSA_CSV}" -- Input CSV File #1 containing table data [String]
		InputFile2 = "%{MergeF24_CSV}" -- Input CSV File #2 containing table data [String]
		AutoDetectColumnTypes = false -- Auto-detect column types before merging [Boolean]
END MERGE1_CSV
---[MERGE2_CSV]---
BEGIN MERGE2_CSV
	UseMethod MergeTables with -- **Merge content of two tables by doing an outer join on the column schema (no join done here)**
		InputFile1 = "%{MergeF28_CSV}" -- Input CSV File #1 containing table data [String]
		InputFile2 = "%{F11xGLOBAL_CSV}" -- Input CSV File #2 containing table data [String]
		AutoDetectColumnTypes = false -- Auto-detect column types before merging [Boolean]
END MERGE2_CSV
---[MERGE3_CSV]---
BEGIN MERGE3_CSV
	UseMethod MergeTables with -- **Merge content of two tables by doing an outer join on the column schema (no join done here)**
		InputFile1 = "%{Merge1_CSV}" -- Input CSV File #1 containing table data [String]
		InputFile2 = "%{Merge2_CSV}" -- Input CSV File #2 containing table data [String]
		AutoDetectColumnTypes = false -- Auto-detect column types before merging [Boolean]
END MERGE3_CSV
---[FINAL_CSV]---
BEGIN FINAL_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		*
	FROM
		%{MERGE3_CSV}
	WHERE
		IsInList(State, '${F28MCCBSTATUS}')
END FINAL_CSV
---[CRUNCH_CSV]---
BEGIN CRUNCH_CSV
	UseMethod SortTable with -- **Sort Table (with support for multiple orderbys)**
		InputFile = "%{FINAL_CSV}" -- Input Table csv [String]
		OrderBy = "[Transfer Date],ID" -- Order By string (e.g., DateTime desc, Name asc, Metrics desc) [String]
END CRUNCH_CSV
---Begin Main Query---
Using CSV with
SELECT
	ID,
	MCCB,
	Process,
	Site,
	tmp as State,
	[Transfer Date],
	Area,
	Type,
	[MCCB Description],
	[Approval requested],
	[Approval Received],
	Comment,
	ChangeType
USING
	CASE CompletedBy when null then State else strcat(strcat(strcat(State, ' ('), CompletedBy), ')') end as tmp
FROM
	%{CRUNCH_CSV}
WHERE
	(isinlist(Owner, 'Capability Owner') or isinlist(CompletedBy, '${COMembers}'))
	or (isinlist(Type, 'Global') and Owner is null)

]]></QuerySQL>
</QueryConfig>