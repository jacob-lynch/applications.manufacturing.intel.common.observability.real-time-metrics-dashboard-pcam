<QueryConfig AutoExecuteQueryOnLoad="false">
  <ChangeLog>Changed by AMR\mfg_dmdavies on 9/28/2015 2:24:29 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.50323.2106</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 2/16/2015 12:41:23 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 2/4/2015 1:56:42 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/11/2014 12:56:06 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/11/2014 11:25:33 AM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/11/2014 11:22:42 AM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/11/2014 11:20:33 AM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/11/2014 11:20:10 AM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/11/2014 11:04:08 AM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 2:04:33 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 2:04:06 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:58:55 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:47:18 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:46:53 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:46:31 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:43:49 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:41:32 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:39:05 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:38:52 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:32:28 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:32:21 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:32:09 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:21:27 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:11:05 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40713.1943</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 12/4/2014 1:03:36 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.41120.1646</ChangeLog>
  <QueryAttributes>
    <RowThresholdForPivotGrid>1000000</RowThresholdForPivotGrid>
    <AlwaysReplaceDomainWithLocal>false</AlwaysReplaceDomainWithLocal>
  </QueryAttributes>
  <PostQuerySQL>select * from %{OUTPUT}</PostQuerySQL>
  <TableLayoutConfig>
    <BoundColumnList>DateTime,NodeName,EventLog,EventID,EventTypeName,Category,SourceName,UserID,Message,Strings</BoundColumnList>
  </TableLayoutConfig>
  <RowHighlightingRules Enable="true" ColumnName="*" FilterRegex="Error" RowColorString="NamedColor:Red" />
  <RowHighlightingRules Enable="true" ColumnName="*" FilterRegex="Warning" RowColorString="NamedColor:Yellow" />
  <TabOrder>C0,G0,G1</TabOrder>
  <MainPivotConfig>
    <ColumnX FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnY FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnData FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <CustomPalette />
    <TableData />
  </MainPivotConfig>
  <OutputDataGridConfig Name="Average Winclient PM" IncludeInBody="false" IncludeInAttachment="true">
    <SQL>---Begin Main Query---
SELECT
	ROUND(AVG(UpTimeDays)) as [Average Uptime (Days)],
	CurrentLocalTime
USING
	div(UpTimeSec, 86400) as UpTimeDays,
	to_date(TO_LOCALTIME(SYSTEM_TIMESTAMP())) AS CurrentLocalTime
FROM
	%{OUTPUT}
</SQL>
    <TableLayoutConfig>
      <BoundColumnList>COUNT(ALL *)</BoundColumnList>
    </TableLayoutConfig>
    <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Average_x0020_Uptime_x0020__x0028_Days_x0029_" type="xs:double" minOccurs="0" />
              <xs:element name="CurrentLocalTime" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
    <TableData />
  </OutputDataGridConfig>
  <OutputDataGridConfig Name="Winclient PM Candidates" IncludeInBody="false" IncludeInAttachment="true">
    <SQL>---Begin Main Query---
Using CSV with
SELECT
	count(*) as [Total Winclients Overdue],
	CurrentLocalTime
USING
	quantize(div(UpTimeSec, 3600), 1) as UpTimeHours,
	to_int(UpTimeHours) as Hours,
	to_date(TO_LOCALTIME(SYSTEM_TIMESTAMP())) AS CurrentLocalTime
FROM
	%{OUTPUT}
WHERE
	Hours &gt; 179
</SQL>
    <TableLayoutConfig>
      <BoundColumnList>COUNT(ALL *)</BoundColumnList>
    </TableLayoutConfig>
    <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Total_x0020_Winclients_x0020_Overdue" type="xs:int" minOccurs="0" />
              <xs:element name="CurrentLocalTime" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
    <TableData />
  </OutputDataGridConfig>
  <AutoPivotConfig OutputDateFormat="yyyy ww.w HH:mm" StatisticalFunctionsForColumn="Avg, 50, 90,96, Count" />
  <MailConfig>
    <PostProcessingSQL Enable="false" />
    <EmailCondition Enable="false" Operator="&lt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
      <Script />
    </EmailCondition>
    <PostProcessingCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
    </PostProcessingCondition>
    <CopyCondition Enable="false" Operator="&gt;" ThresholdRowCount="">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
    </CopyCondition>
    <SMTPServer>smtp.intel.com</SMTPServer>
    <From>LogAnalyzer2@intel.com</From>
    <ReplyTo>@{DASHBOARD_OWNER_ALERT_DIST}</ReplyTo>
    <To />
    <Subject>Winclient Reboots</Subject>
    <Body />
    <OnlyProcessIfOutputChangedFromPreviousRun>false</OnlyProcessIfOutputChangedFromPreviousRun>
    <MailAttachments FileNamingFormat="${SETTINGS}_yyyyMMdd" Excel="false" LAS="false" LAD="false" Exceptions="false" StatusLogs="false" PivotChart="false" ZipAttachments="false" DoNotSendAttachmentsWithEmail="false" IncludeJobStatisticsHeader="false" IncludeQuerySettingsFileHeader="false" IncludeVariableDefinitionHeader="false" IncludeRowCountInSubject="false" />
    <IncludeSQLQueryInBody>false</IncludeSQLQueryInBody>
    <TableInBody Enable="false">
      <SQL />
    </TableInBody>
    <CopyOutputToDirectory>true</CopyOutputToDirectory>
    <OutputDirectory>@{DASHBOARD_PERSIST_DATA}\PCAM\Output\WinclientPM</OutputDirectory>
    <IncludeAutoPivotSummary>false</IncludeAutoPivotSummary>
    <IgnoreExceptions>false</IgnoreExceptions>
    <OnlyCopyOutputIfEmailConditionIsMet>false</OnlyCopyOutputIfEmailConditionIsMet>
  </MailConfig>
  <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NodeName" type="xs:string" minOccurs="0" />
              <xs:element name="UpTimeSec" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
  <TableData />
  <LastRunAbsoluteDateFilter />
  <PivotGroupingSettings PivotColumn="">
    <SortyByColumn>Count</SortyByColumn>
  </PivotGroupingSettings>
  <QuerySQL><![CDATA[
--[FileName:"D:\Dashboard\Jobs\PCAM\24-hr\Winclient Reboot_Running Average.lasx"]------
----------<VARIABLES>------------
var README = "** Use node name(s), OpsMgr Class Name(s) or OpsMgr Group name(s) in the NodeFilter"
var OM_DW_SQL_SERVER = "@{OM12_DW_SQL_SERVER}"
var NODEFILTER = "Windows Client Computer Group"
var WINCLIENT_REBOOT_EXCLUDE = "@{WINCLIENT_REBOOT_EXCLUDE}"
---[DWLIST]---
[ThreadQuery(1)] --** Invoke a separate thread for every 1 output row(s) of the {DWLIST} query
BEGIN DWLIST
	UseMethod GetList with -- **Get the list specifed as delimiter separated values**
		List = "${OM_DW_SQL_SERVER}" -- Delimiter separated list of nodes [String]
		Delimiter = "," -- Delimiter used in the list (default is comma) [String]
END DWLIST
---[PERFMON_CSV]---
BEGIN PERFMON_CSV
	UseMethod GetOpsMgrPerfmonHourlyAggregation with -- **Get Hourly Aggregated Perfmon from the OpsMgr Data Warehouse (up to 400 days)**
		DWServer = "%{DWLIST}" -- Name of the OpsMgr Data Warehouse (including SQL Instance). IE rf3pdb115momdw\sql02 [String]
		DateFilter = "Last 6 hours" -- Date range to retrieve event data for [String]
		NodeFilter = "${NODEFILTER}" -- Pattern to look for Computers, Groups or OpsMgr Classes (comma-separated-list) [String]
		ExcludeFilter = "" -- Pattern to exclude from the list of Computers, Group or OpsMgr Classes (comma-separated-list) [String]
		ObjectFilter = "System" -- Wild-card filters for Perfmon Objects (comma-separated) [Type: STRING] [String]
		CounterFilter = "*Up Time*" -- Wild-card filters for Perfmon Counters (comma-separated) [Type: STRING] [String]
		InstanceFilter = "" -- Wild-card filters for Perfmon Instances (comma-separated) [Type: STRING] [String]
END PERFMON_CSV
---[PERFMON2_CSV]---
BEGIN PERFMON2_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		'Perf' as Type,
		DateTime,
		to_uppercase(extract_token(Path, 0, '.')) as NodeName,
		AverageValue as Data1,
		[MaxValue] as Data2
	FROM
		%{PERFMON_CSV}
END PERFMON2_CSV
---[EVENT_CSV]---
BEGIN EVENT_CSV
	UseMethod GetOpsMgrEvents with -- **Get Events from the OpsMgr Data Warehouse (up to 400 days)**
		DWServer = "%{DWLIST}" -- Name of the OpsMgr Data Warehouse (including SQL Instance). IE rf3pdb115momdw\sql02 [String]
		DateFilter = "Last 30 days (prev mode)" -- Date range to retrieve event data for [String]
		NodeFilter = "${NODEFILTER}" -- Pattern to look for Computers, Groups or OpsMgr Classes (comma-separated-list) [String]
		ExcludeFilter = "" -- Pattern to exclude from the list of Computers, Group or OpsMgr Classes (comma-separated-list) [String]
		EventIDFilter = "*" -- Wild-card filters for Event ID (comma-separated) [Type: STRING] [String]
		EventTypeFilter = "*" -- Wild-card filters for Event Type (comma-separated) [Type: STRING] [String]
		EventCategoryFilter = "*" -- Wild-card filters for Event Category (comma-separated) [Type: STRING] [String]
		EventSourceFilter = "*EventLog*,*Save Dump*" -- Wild-card filters for Event Source (comma-separated) [Type: STRING] [String]
		EventLogFilter = "System" -- Wild-card filters for Event Log (comma-separated) [Type: STRING] [String]
		EventUserNameFilter = "*" -- Wild-card filters for Event UserName (comma-separated) [Type: STRING] [String]
END EVENT_CSV
---[EVENT2_CSV]---
BEGIN EVENT2_CSV
	---Begin Main Query---
	Using CSV with
	SELECT
		'Event' as Type,
		DateTime,
		Computer as NodeName,
		ID as Data1,
		Source as Data2
	FROM
		%{event_csv}
END EVENT2_CSV
---Begin Main Query---
Using CSV with
SELECT
	NodeName,
	max(Data2) as UpTimeSec
FROM
	%{perfmon2_csv},
	%{event2_csv}
WHERE
	NOT IsInList(NodeName, '${WINCLIENT_REBOOT_EXCLUDE}')
	AND Type = 'Perf'
GROUP BY
	NodeName

]]></QuerySQL>
</QueryConfig>