<QueryConfig AutoExecuteQueryOnLoad="false">
  <ChangeLog>Changed by AMR\mfg_dmdavies on 9/30/2014 8:49:36 AM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40923.2310</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 5/1/2013 4:51:07 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.6.30430.2016</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 4/30/2013 5:17:11 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.6.30427.2018</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 1/11/2013 8:40:39 AM from RF3PAP216N1.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20326.1729</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 10/11/2012 1:54:01 PM from RF3PAP216N1.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20326.1729</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/8/2012 11:42:44 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/8/2012 11:35:51 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/8/2012 11:35:48 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/8/2012 11:29:01 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_amodi on 10/4/2012 12:13:58 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_amodi on 10/4/2012 11:50:18 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_amodi on 10/4/2012 11:49:49 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_amodi on 10/4/2012 11:48:48 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/4/2012 9:50:24 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/3/2012 4:17:31 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 10/1/2012 3:57:15 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/28/2012 3:47:49 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/28/2012 12:27:31 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/28/2012 12:15:24 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/28/2012 12:14:56 PM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 9/28/2012 11:34:17 AM from RF3PTS215.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20925.1552</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 7/19/2012 3:38:41 PM from F32PTS215.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20710.1639</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 7/19/2012 3:38:04 PM from F32PTS215.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20710.1639</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 7/19/2012 3:37:23 PM from F32PTS215.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20710.1639</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_tcalford on 7/19/2012 3:35:37 PM from F32PTS215.F32PROD.MFG.INTEL.COM using LogAnalyzer2 v2.5.20710.1639</ChangeLog>
  <UNIQECredentials UserId="uber" Site="rf3sap110-alias.rf3stg.mfgint.intel.com" DataSource="D1D_STAG_LogAnalyzer" SaveCredentials="true" UseUNIQECredentialsOnStartUp="false" QueryTimeOutInSeconds="-1">
    <Password />
    <Name />
  </UNIQECredentials>
  <QueryAttributes>
    <OutputDateFormat>yyyy.ww</OutputDateFormat>
    <AlwaysReplaceDomainWithLocal>false</AlwaysReplaceDomainWithLocal>
  </QueryAttributes>
  <PostQuerySQL>select * from %{OUTPUT}</PostQuerySQL>
  <TableLayoutConfig>
    <BoundColumnList>EntityType,AR,Net,PCAM,SC,UI,APC,AsIs,D1X,L8,MCS,WC,WStn,ID,YAS,SPC</BoundColumnList>
  </TableLayoutConfig>
  <RowHighlightingRules Enable="true" ColumnName="Globals" FilterRegex="O" RowColorString="NamedColor:White" />
  <RowHighlightingRules Enable="true" ColumnName="Platforms" FilterRegex="O" RowColorString="NamedColor:White" />
  <RowHighlightingRules Enable="true" ColumnName="AWIT" FilterRegex="O" RowColorString="NamedColor:White" />
  <RowHighlightingRules Enable="true" ColumnName="Pingable_WC" FilterRegex="Pingable" RowColorString="NamedColor:Lime" />
  <RowHighlightingRules Enable="true" ColumnName="Pingable_WC" FilterRegex="" RowColorString="NamedColor:White" />
  <TabOrder>C0</TabOrder>
  <MainPivotConfig>
    <ColumnX FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnY FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnData FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <CustomPalette />
    <TableData />
  </MainPivotConfig>
  <AutoPivotConfig OutputDateFormat="yyyy ww.w hh tt" />
  <MailConfig>
    <PostProcessingSQL Enable="false" />
    <EmailCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
      <Script />
    </EmailCondition>
    <PostProcessingCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
    </PostProcessingCondition>
    <CopyCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
    </CopyCondition>
    <SMTPServer>smtp.intel.com</SMTPServer>
    <From>LogAnalyzer2@intel.com</From>
    <ReplyTo>@{DASHBOARD_OWNER_ALERT_DIST}</ReplyTo>
    <To />
    <Subject>[${DOMAIN}] TIPR_Capabilities</Subject>
    <Body />
    <OnlyProcessIfOutputChangedFromPreviousRun>false</OnlyProcessIfOutputChangedFromPreviousRun>
    <MailAttachments FileNamingFormat="${SETTINGS}" Excel="false" CSV="false" LAS="false" LAD="false" Exceptions="false" StatusLogs="false" PivotChart="false" ZipAttachments="false" DoNotSendAttachmentsWithEmail="false" IncludeJobStatisticsHeader="false" IncludeQuerySettingsFileHeader="false" IncludeVariableDefinitionHeader="false" IncludeRowCountInSubject="false" />
    <IncludeSQLQueryInBody>false</IncludeSQLQueryInBody>
    <TableInBody Enable="true">
      <SQL />
    </TableInBody>
    <CopyOutputToDirectory>true</CopyOutputToDirectory>
    <OutputDirectory>@{DASHBOARD_WEB_SPOOL}\PCAM\Output</OutputDirectory>
    <IncludeAutoPivotSummary>false</IncludeAutoPivotSummary>
    <IncludeCustomPivotSummary>false</IncludeCustomPivotSummary>
    <IgnoreExceptions>false</IgnoreExceptions>
    <OnlyCopyOutputIfEmailConditionIsMet>false</OnlyCopyOutputIfEmailConditionIsMet>
  </MailConfig>
  <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EntityType" type="xs:string" minOccurs="0" />
              <xs:element name="AR" type="xs:string" minOccurs="0" />
              <xs:element name="PCAM" type="xs:string" minOccurs="0" />
              <xs:element name="UI" type="xs:string" minOccurs="0" />
              <xs:element name="APC" type="xs:string" minOccurs="0" />
              <xs:element name="AsIs" type="xs:string" minOccurs="0" />
              <xs:element name="D1X" type="xs:string" minOccurs="0" />
              <xs:element name="L8" type="xs:string" minOccurs="0" />
              <xs:element name="MCS" type="xs:string" minOccurs="0" />
              <xs:element name="SPC" type="xs:string" minOccurs="0" />
              <xs:element name="Net" type="xs:string" minOccurs="0" />
              <xs:element name="WC" type="xs:string" minOccurs="0" />
              <xs:element name="WStn" type="xs:string" minOccurs="0" />
              <xs:element name="ID" type="xs:string" minOccurs="0" />
              <xs:element name="YAS" type="xs:string" minOccurs="0" />
              <xs:element name="SC" type="xs:string" minOccurs="0" />
              <xs:element name="AM" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
  <TableData />
  <LastRunAbsoluteDateFilter />
  <CustomQueryMethodScripts>using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.IO;
using System.Text;
using System.Diagnostics;
using System.Text.RegularExpressions;
using Intel.LogAnalyzer;
using Intel.LogAnalyzer.Common;
using Intel.LogAnalyzer.Configuration;
using Intel.LogAnalyzer.Utility;

namespace Intel.LogAnalyzer.BuiltInQueryMethods_Sample
{
    public class CalculateRunningSum : CustomQueryMethodBase
    {

        /// &lt;summary&gt;
        /// Test harness
        /// &lt;/summary&gt;
        [STAThread]
        private static void Main()
        {
            new CalculateRunningSum
            {
                InputFile = @"D:\Temp\test.csv",
                ColumnToCalculateSumFor = "Total",
                PivotColumn = "MetSLA",
                NewColumnForRunningSum = "RunningTotal",
                NewColumnForAbsoluteRunningSum = "AbsoluteRunningTotal"
            }.Test();
        }

        // Output type is QueryResult
        public override CustomQueryOutputType OutputType { get { return CustomQueryOutputType.QueryResult; } }

        public override string Description
        {
            get { return "Get Running Sum for a Column in the Table"; }
        }

        [Description("Input CSV file")]
        public string InputFile { get; set; }
        
        [Description("Input CSV file")]
        public string ColumnToCalculateSumFor { get; set; }
        
        [Description("Pivot column (optional)")]
        [DefaultValue("")]
        public string PivotColumn { get; set; }

        [Description("New column to be added with running sum")]
        [DefaultValue("RunningSum")]
        public string NewColumnForRunningSum { get; set; }
        
        [Description("New column to be added with absolute running sum which ignores the pivot column")]
        [DefaultValue("")]
        public string NewColumnForAbsoluteRunningSum { get; set; }

        public override QueryResult GetQueryResult()
        {
            DataTable table = UtilityMethods.ConvertCSVFileToDataTable(InputFile, true);
            int colIndex = GetColumnIndex(table, ColumnToCalculateSumFor, true);
            int pivotIndex = -1;

            if (PivotColumn.Trim().Length &gt; 0)
            {
                pivotIndex = GetColumnIndex(table, PivotColumn, true);
            }

            table.Columns.Add(NewColumnForRunningSum, typeof(double));
            int newColIndex = GetColumnIndex(table, NewColumnForRunningSum);

            NewColumnForAbsoluteRunningSum = NewColumnForAbsoluteRunningSum.Trim();
            int newAbsColIndex = -1;
            if (NewColumnForAbsoluteRunningSum.Length &gt; 0)
            {
                table.Columns.Add(NewColumnForAbsoluteRunningSum, typeof(double));
                newAbsColIndex = GetColumnIndex(table, NewColumnForAbsoluteRunningSum);
            }

            Dictionary&lt;string, double&gt; dict = new Dictionary&lt;string, double&gt;();
            double absoluteSum = 0.0;

            foreach (DataRow row in table.Rows)
            {
                string key = string.Empty;
                if (pivotIndex &gt;= 0)
                {
                    key = row[pivotIndex].ToStringEx();
                }
                double value = Convert.ToDouble(row[colIndex]);
                absoluteSum += value;
                double sum;
                if (dict.TryGetValue(key, out sum))
                {
                    sum += value;
                    dict[key] = sum;
                }
                else
                {
                    sum = value;
                    dict.Add(key, sum);
                }
                row[newColIndex] = sum;
                if (newAbsColIndex &gt;= 0)
                {
                    row[newAbsColIndex] = absoluteSum;
                }
            }
           
            return new QueryResult(table);
        }

    }
}</CustomQueryMethodScripts>
  <PivotGroupingSettings Enable="true" PivotColumn="IQ_WS">
    <SortyByColumn>Count</SortyByColumn>
  </PivotGroupingSettings>
  <QuerySQL><![CDATA[
--[FileName:"Y:\PCAM\1-hr\TIPR_Capabilities.lasx"]------
----------<VARIABLES>------------
var TIMEFILTER = ""
var SQL_NODE = "@{TIPRSQLNODE}"
var TIPRPW = "@{TIPRPW}"
var TIPRID = "@{TIPRID}"
var CATALOG = "DSI"
var SQL_QUERY = "SELECT EntityType, CapCode
FROM dbo.EntityTypeCapabilities"
---[OLEDB_CSV]---
BEGIN OLEDB_CSV
	UseMethod QueryOLEDB with -- **Run an OLEDB query**
		ConnectionString = "Provider=SQLOLEDB.1;User ID=${TIPRID};Password=${TIPRPW};Persist Security Info=True;Data Source=${SQL_NODE}; Initial Catalog=${CATALOG};" -- OLEDB connection string [String]
		Query = "${SQL_QUERY}" -- SQL Query to run against OLEDB provider [String]
END OLEDB_CSV
---Begin Main Query---
UseMethod TransformRowsToColumn with -- **Transforms multiple table rows into new name/value columns**
	InputFile = "%{OLEDB_CSV}" -- Input CSV file containing table data [String]
	ColumnNameForCaption = "CapCode" -- Caption for new column type created after transformation [String]
	ColumnNameForValue = "CapCode" -- Caption for new column value created after transformation [String]
	ExcludeColumnFilter = "" -- Columns to be excluded from output table (can include wild-cards and be separated by commas) [String]
	DefaultValue = "" -- Default value for cell if one does not exist [String]

]]></QuerySQL>
</QueryConfig>