<QueryConfig AutoExecuteQueryOnLoad="false">
  <ChangeLog>Changed by AMR\mfg_dmdavies on 9/28/2015 2:15:37 PM from RF3PAP216N3.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.50323.2106</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 11/6/2014 9:53:08 AM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40923.2310</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 11/5/2014 11:31:47 AM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40923.2310</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 10/3/2014 1:02:31 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40923.2310</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 10/3/2014 1:02:17 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40923.2310</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 9/30/2014 2:46:16 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40923.2310</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 9/30/2014 9:26:26 AM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40923.2310</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 9/2/2014 3:12:17 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40806.2215</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 9/2/2014 3:09:16 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40806.2215</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 9/2/2014 3:09:07 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40806.2215</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 9/2/2014 3:09:02 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40806.2215</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 9/2/2014 3:06:28 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40806.2215</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 9/2/2014 3:02:29 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40806.2215</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 8/6/2014 1:05:21 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40723.2330</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 8/6/2014 1:01:52 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40723.2330</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 8/6/2014 1:01:11 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40723.2330</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 8/1/2014 4:56:31 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40723.2330</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 7/29/2014 3:29:07 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40723.2330</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 7/24/2014 2:49:32 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40723.2330</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 7/24/2014 2:48:54 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40723.2330</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 7/24/2014 2:48:39 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40723.2330</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 7/24/2014 2:45:49 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40723.2330</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 7/24/2014 2:44:06 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40723.2330</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 7/24/2014 2:41:28 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40723.2330</ChangeLog>
  <ChangeLog>Changed by AMR\mfg_dmdavies on 7/24/2014 2:37:52 PM from RF3PTS216.RF3PROD.MFG.INTEL.COM using LogAnalyzer2 v2.8.40723.2330</ChangeLog>
  <QueryAttributes>
    <OutputDateFormat>MM/dd/yyyy HH:mm:ss</OutputDateFormat>
    <AlwaysReplaceDomainWithLocal>false</AlwaysReplaceDomainWithLocal>
  </QueryAttributes>
  <PostQuerySQL>select * from %{OUTPUT}</PostQuerySQL>
  <TableLayoutConfig>
    <BoundColumnList>MachineControllerGroup,Version,Date,Action,Who,ParameterName,NewValue,OldValue</BoundColumnList>
  </TableLayoutConfig>
  <TabOrder>C0,C1,G0,G1</TabOrder>
  <MainPivotConfig Enable="true">
    <ColumnX FieldName="Who" FieldType="String" SortMode="Default" SortOrder="Descending" SummaryType="Count" SortBySummaryInfo="true" SortBySummaryInfoFieldName="COUNT OF" />
    <ColumnY FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnData FieldName="COUNT OF" FieldType="DateTime" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <TopN>35</TopN>
    <Name>SC.NET Parameter History by User</Name>
    <ChartTitle>SC.NET Parameter History by User</ChartTitle>
    <ColorPalette>Median</ColorPalette>
    <ChartExportSize>800x400</ChartExportSize>
    <ShowLegend>false</ShowLegend>
    <CustomPalette />
    <TableData />
  </MainPivotConfig>
  <MainPivotConfig Enable="true">
    <ColumnX FieldName="ToolType" FieldType="String" SortMode="Default" SortOrder="Descending" SummaryType="Count" SortBySummaryInfo="true" SortBySummaryInfoFieldName="COUNT OF" />
    <ColumnY FieldName="" FieldType="" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <ColumnData FieldName="COUNT OF" FieldType="DateTime" SortMode="Default" SortOrder="Ascending" SummaryType="Count" SortBySummaryInfo="false" />
    <TopN>35</TopN>
    <Name>SC.NET Parameter History by Tool Type</Name>
    <ChartTitle>SC.NET Parameter History by Tool Type</ChartTitle>
    <ColorPalette>Median</ColorPalette>
    <ChartExportSize>800x400</ChartExportSize>
    <ShowLegend>false</ShowLegend>
    <CustomPalette />
    <TableData />
  </MainPivotConfig>
  <OutputDataGridConfig Name="Last 24 hour" IncludeInBody="false" IncludeInAttachment="true">
    <SQL>---Begin Main Query---
SELECT
	to_la2date(Date, 'yyyy/MM/dd HH:mm:ss') as Date,
	Application,
	Version,
	Site,
	Process,
	Area,
	ToolType,
	Entity,
	Action,
	Who,
	ParameterName,
	OldValue,
	NewValue,
	Critical
FROM
	%{OUTPUT}
WHERE
	applytimerangefilter(Date, 'last 24 hours')
</SQL>
    <TableLayoutConfig>
      <BoundColumnList>Date,Application,Version,Site,Process,Area,ToolType,Entity,Action,Who,ParameterName,OldValue,NewValue,Critical</BoundColumnList>
    </TableLayoutConfig>
    <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Date" type="xs:string" minOccurs="0" />
              <xs:element name="Application" type="xs:string" minOccurs="0" />
              <xs:element name="Version" type="xs:string" minOccurs="0" />
              <xs:element name="Site" type="xs:string" minOccurs="0" />
              <xs:element name="Process" type="xs:int" minOccurs="0" />
              <xs:element name="Area" type="xs:string" minOccurs="0" />
              <xs:element name="ToolType" type="xs:string" minOccurs="0" />
              <xs:element name="Entity" type="xs:string" minOccurs="0" />
              <xs:element name="Action" type="xs:string" minOccurs="0" />
              <xs:element name="Who" type="xs:string" minOccurs="0" />
              <xs:element name="ParameterName" type="xs:string" minOccurs="0" />
              <xs:element name="OldValue" type="xs:string" minOccurs="0" />
              <xs:element name="NewValue" type="xs:string" minOccurs="0" />
              <xs:element name="Critical" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
    <TableData />
  </OutputDataGridConfig>
  <OutputDataGridConfig Name="Last Week" IncludeInBody="false" IncludeInAttachment="true">
    <SQL>---Begin Main Query---
SELECT
	to_la2date(Date, 'yyyy/MM/dd HH:mm:ss') as Date,
	Application,
	Version,
	Site,
	Process,
	Area,
	ToolType,
	Entity,
	Action,
	Who,
	ParameterName,
	OldValue,
	NewValue,
	Critical,
	UserName
FROM
	%{OUTPUT}
WHERE
	applytimerangefilter(Date, 'last 1 week')
</SQL>
    <TableLayoutConfig>
      <BoundColumnList>Date,Application,Version,Site,Process,Area,ToolType,Entity,Action,Who,ParameterName,OldValue,NewValue,Critical</BoundColumnList>
    </TableLayoutConfig>
    <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Date" type="xs:string" minOccurs="0" />
              <xs:element name="Application" type="xs:string" minOccurs="0" />
              <xs:element name="Version" type="xs:string" minOccurs="0" />
              <xs:element name="Site" type="xs:string" minOccurs="0" />
              <xs:element name="Process" type="xs:int" minOccurs="0" />
              <xs:element name="Area" type="xs:string" minOccurs="0" />
              <xs:element name="ToolType" type="xs:string" minOccurs="0" />
              <xs:element name="Entity" type="xs:string" minOccurs="0" />
              <xs:element name="Action" type="xs:string" minOccurs="0" />
              <xs:element name="Who" type="xs:string" minOccurs="0" />
              <xs:element name="ParameterName" type="xs:string" minOccurs="0" />
              <xs:element name="OldValue" type="xs:string" minOccurs="0" />
              <xs:element name="NewValue" type="xs:string" minOccurs="0" />
              <xs:element name="Critical" type="xs:string" minOccurs="0" />
              <xs:element name="UserName" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
    <TableData />
  </OutputDataGridConfig>
  <AutoPivotConfig OutputDateFormat="yyyy ww.w hh tt" />
  <MailConfig>
    <PostProcessingSQL Enable="false" />
    <EmailCondition Enable="false" Operator="&lt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
      <Script />
    </EmailCondition>
    <PostProcessingCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
    </PostProcessingCondition>
    <CopyCondition Enable="false" Operator="&gt;" ThresholdRowCount="0">
      <SQLQuery />
      <RunScriptBeforeEmailing>false</RunScriptBeforeEmailing>
    </CopyCondition>
    <SMTPServer>smtp.intel.com</SMTPServer>
    <From>LogAnalyzer2@DONOTREPLY.COM</From>
    <ReplyTo>@{DASHBOARD_OWNER_ALERT_DIST}</ReplyTo>
    <To />
    <Subject>[${DOMAIN}] SC.NET CC changes</Subject>
    <Body />
    <OnlyProcessIfOutputChangedFromPreviousRun>false</OnlyProcessIfOutputChangedFromPreviousRun>
    <MailAttachments FileNamingFormat="${SETTINGS}" Excel="false" LAS="false" LAD="false" Exceptions="false" StatusLogs="false" PivotChart="true" ZipAttachments="false" DoNotSendAttachmentsWithEmail="false" IncludeQuerySettingsFileHeader="false" IncludeVariableDefinitionHeader="false" IncludeRowCountInSubject="false" />
    <IncludeSQLQueryInBody>false</IncludeSQLQueryInBody>
    <TableInBody Enable="false">
      <SQL>SELECT
	top 50 *
FROM
	%{output}</SQL>
    </TableInBody>
    <CopyOutputToDirectory>true</CopyOutputToDirectory>
    <OutputDirectory>@{DASHBOARD_WEB_SPOOL}\PCAM\Output</OutputDirectory>
    <IncludeAutoPivotSummary>false</IncludeAutoPivotSummary>
    <IncludeCustomPivotSummary>false</IncludeCustomPivotSummary>
    <IgnoreExceptions>true</IgnoreExceptions>
    <OnlyCopyOutputIfEmailConditionIsMet>false</OnlyCopyOutputIfEmailConditionIsMet>
  </MailConfig>
  <TableSchema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Results" msdata:UseCurrentLocale="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Results">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Date" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Application" type="xs:string" minOccurs="0" />
              <xs:element name="Version" type="xs:string" minOccurs="0" />
              <xs:element name="Site" type="xs:string" minOccurs="0" />
              <xs:element name="Process" type="xs:string" minOccurs="0" />
              <xs:element name="Area" type="xs:string" minOccurs="0" />
              <xs:element name="ToolType" type="xs:string" minOccurs="0" />
              <xs:element name="Entity" type="xs:string" minOccurs="0" />
              <xs:element name="Action" type="xs:string" minOccurs="0" />
              <xs:element name="Who" type="xs:string" minOccurs="0" />
              <xs:element name="ParameterName" type="xs:string" minOccurs="0" />
              <xs:element name="OldValue" type="xs:string" minOccurs="0" />
              <xs:element name="NewValue" type="xs:string" minOccurs="0" />
              <xs:element name="Critical" type="xs:string" minOccurs="0" />
              <xs:element name="UserName" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
</TableSchema>
  <TableData />
  <LastRunAbsoluteDateFilter>All</LastRunAbsoluteDateFilter>
  <CustomSQLFunctionScripts>using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using Intel.LogAnalyzer.Common;
using Intel.LogAnalyzer.Utility;

namespace Intel.LogAnalyzer.BuiltInSQLFunctions_Temp
{
    public class ToLA2Date : ICustomSQLFunction
    {
        /// &lt;summary&gt;
        /// Test harness
        /// &lt;/summary&gt;
        [STAThread]
        private static void Main()
        {
            new ToLA2Date().Test(@"To_LA2Date(DateTime, 'yyyy ww.w')");
        }

        private enum FunctionName
        {
            To_LA2Date,
            To_LA2DateString
        }

        private class WWFilterInput
        {
            public string Query;
            public FunctionName Function;
            public string DateField;
            public string FormatFilter;
            public Match Match;
        }

        private WWFilterInput _input = null;

        private const string CHECK_PATTERN =
            @"(?&lt;=(\s+|\())(?&lt;FUNCTION&gt;(To_LA2Date|To_LA2DateString))\s*\(";

        private const string PATTERN = CHECK_PATTERN + @"\s*"
                + @"(?&lt;DateField&gt;[^,]+)\s*,\s*'(?&lt;FormatFilter&gt;[^']+)'\s*\)(?=(\s*|\)))";

        private const string INPUT_FORMAT_MESSAGE =
            @"Expected: ${FUNCTION}( &lt;DATE-FIELD&gt; , ""&lt;FORMAT-FILTER&gt;"")";

        public string LogParserType { get; set; }

        public bool IsCustomSQLFunction(string query)
        {
            return IsWWFunction(query, out _input);
        }

        private bool IsWWFunction(string query, out WWFilterInput input)
        {
            Match match = Regex.Match(query, PATTERN,
                RegexOptions.Singleline | RegexOptions.IgnoreCase);

            if (match.Success)
            {
                input = new WWFilterInput();

                input.Query = query;
                input.Function = UtilityMethods.ConvertToEnum&lt;FunctionName&gt;(match.Groups["FUNCTION"].Value);
                input.DateField = GetMatchValue(match, "DateField");
                input.FormatFilter = GetMatchValue(match, "FormatFilter");
                input.Match = match;

                return true;
            }
            else
            {
                match = Regex.Match(query, CHECK_PATTERN,
                    RegexOptions.Singleline | RegexOptions.IgnoreCase);
                if (match.Success)
                {
                    FunctionName function = UtilityMethods.ConvertToEnum&lt;FunctionName&gt;(match.Groups["FUNCTION"].Value);
                    string message = INPUT_FORMAT_MESSAGE.Replace("${FUNCTION}", function.ToString());
                    throw new Exception(message);
                }
                input = null;
                return false;
            }
        }

        public string Execute()
        {
            string modifiedQuery = string.Empty;

            while (_input != null)
            {
                modifiedQuery = _input.Query;
                string output = string.Empty;

                switch (_input.Function)
                {
                    case FunctionName.To_LA2Date:
                    case FunctionName.To_LA2DateString:
                        output = GetStringFormat(_input.DateField, _input.FormatFilter);
                        break;
                }

                Match match = _input.Match;
                modifiedQuery = modifiedQuery.Substring(0, match.Index)
                    + output + modifiedQuery.Substring(match.Index + match.Length);

                IsWWFunction(modifiedQuery, out _input); // see if there is any other occurence of this function in the query
            }

            return modifiedQuery;
        }

        private static string GetStringFormat(string dateField, string format)
        {
            string newFormat = string.Empty;

            for (int i = 0; i &lt; format.Length; i++)
            {
                newFormat += @"\" + format[i];
            }

            string newDateField = dateField;
            string formatString = "yyyy/MM/dd HH:mm:ss.ll";

            if (format.ContainsEx("ww") &amp;&amp; !format.IsMatch("*H*|*h*|*m*|*s*|*f*"))
            {
                formatString = "yyyy/MM/dd";
                if (!format.IsMatch("*ww.w*|*d*")) // just ww
                {
                    // add a day and quantize by a week as Intel WW format is off by 1 day (Sunday is part of next WW with .0)
                    newDateField = "quantize(add(" + dateField + ", TIMESTAMP('2', 'd')), 604800)";
                }
            }

            return "to_string(" + newDateField + @", '" + newFormat + "{::}" + formatString + "')";
        }

        private string GetMatchValue(Match match, string groupName)
        {
            string value = match.Groups[groupName].Value.Trim(); ;
            if (value.Length == 0)
            {
                throw new ArgumentException("To_WorkWeek: Parameter [" + groupName + "] cannot be empty.");
            }
            return value;
        }

    }
}
</CustomSQLFunctionScripts>
  <PivotGroupingSettings PivotColumn="">
    <SortyByColumn>Count</SortyByColumn>
  </PivotGroupingSettings>
  <QuerySQL><![CDATA[
--[FileName:"T:\Dashboard\Jobs\PCAM\1-hr\SCNET CC History Merged.lasx"]------
----------<VARIABLES>------------
var NODEFILTER = "*"
var TIMEFILTER = ""
var SQL_NODE = "@{SCNETSQLNODE}"
var CATALOG = "SCConfigDB"
var USERID = "@{SCNETSQLID}"
var PASSWORD = "@{SCNETSQLPW}"
var CRITICAL_PARAM = "@{DASHBOARD_PERSIST_DATA}\PCAM\Output\SCNET_Critical_Parameters.csv"
---[CRITICAL_CSV]---
BEGIN CRITICAL_CSV
	---Begin Main Query---
	Using TEXTLINE with
	SELECT
		Text as ParameterName,
		'Yes' as Critical
	FROM
		${CRITICAL_PARAM}
END CRITICAL_CSV
---[PARAM_CSV]---
BEGIN PARAM_CSV
	---Begin Main Query---
	Using SQLDB with
		HostName = "${SQL_NODE}"
		Database = "${CATALOG}"
		UserID = "${USERID}"
		Password = "${PASSWORD}"
	SELECT
	  *
	FROM
	  dbo.ParameterChanges 
END PARAM_CSV
---[USER_CSV]---
BEGIN USER_CSV
	---Begin Main Query---
	Using SQLDB with
		HostName = "${SQL_NODE}"
		Database = "${CATALOG}"
		UserID = "${USERID}"
		Password = "${PASSWORD}"
	SELECT
	  ID AS UserID,
	  DisplayName,
	  EmailAddress,
	  UserName
	FROM
	  dbo.Users 
END USER_CSV
---[JOIN_CSV]---
BEGIN JOIN_CSV
	UseMethod Join with -- **Do an outer join for two tables based on a matching column**
		InputFile1 = "%{PARAM_CSV}" -- Input CSV File #1 containing table data [String]
		InputFile2 = "%{USER_CSV}" -- Input CSV File #2 containing table data [String]
		InputFile3 = "" -- Input CSV File #3 containing table data (optional) [String]
		InputFile4 = "" -- Input CSV File #4 containing table data (optional) [String]
		InputFile5 = "" -- Input CSV File #5 containing table data (optional) [String]
		InputFile6 = "" -- Input CSV File #6 containing table data (optional) [String]
		JoinColumn = "UserID" -- Column name(s) on which to join the two tables (more than one column can be supplied by using comma as a separator) [String]
		IgnoreDuplicate = false -- Flag to ignore duplicate items in the JoinColumn [Boolean]
		IgnoreCase = false -- Flag to ignore case in the JoinColumn [Boolean]
		OnlyShowNonMatchingRows = false -- Flag to only show non-matching orphan rows [Boolean]
		IncludeNonMatchingRows = false -- Flag to also include non-matching orphan rows (but with blank entries) [Boolean]
		MustIncludeOutputColumns = "" -- Name of columns (comma-separated) that must be included in output even if the join does not materialize [String]
		OrderBy = "" -- Name of column(s) to sort the resulting table by [String]
END JOIN_CSV
---[JOIN2_CSV]---
BEGIN JOIN2_CSV
	UseMethod Join with -- **Do an outer join for two tables based on a matching column**
		InputFile1 = "%{JOIN_CSV}" -- Input CSV File #1 containing table data [String]
		InputFile2 = "%{CRITICAL_CSV}" -- Input CSV File #2 containing table data [String]
		InputFile3 = "" -- Input CSV File #3 containing table data (optional) [String]
		InputFile4 = "" -- Input CSV File #4 containing table data (optional) [String]
		InputFile5 = "" -- Input CSV File #5 containing table data (optional) [String]
		InputFile6 = "" -- Input CSV File #6 containing table data (optional) [String]
		JoinColumn = "ParameterName" -- Column name(s) on which to join the two tables (more than one column can be supplied by using comma as a separator) [String]
		IgnoreDuplicate = false -- Flag to ignore duplicate items in the JoinColumn [Boolean]
		IgnoreCase = false -- Flag to ignore case in the JoinColumn [Boolean]
		OnlyShowNonMatchingRows = false -- Flag to only show non-matching orphan rows [Boolean]
		IncludeNonMatchingRows = true -- Flag to also include non-matching orphan rows (but with blank entries) [Boolean]
		MustIncludeOutputColumns = "" -- Name of columns (comma-separated) that must be included in output even if the join does not materialize [String]
		OrderBy = "" -- Name of column(s) to sort the resulting table by [String]
END JOIN2_CSV
---Begin Main Query---
Using CSV with
SELECT
	ChangeDate as Date,
	Application,
	Version,
	Site,
	Process,
	Area,
	ToolType,
	Entity,
	Action,
	DisplayName as Who,
	ParameterName,
	to_string(OldValue) as OldValue,
	to_string(NewValue) as NewValue,
	Critical,
	UserName
FROM
	%{JOIN2_CSV}
WHERE
	applytimerangefilter(Date, 'last 1 year')
ORDER BY
	Date desc

]]></QuerySQL>
</QueryConfig>