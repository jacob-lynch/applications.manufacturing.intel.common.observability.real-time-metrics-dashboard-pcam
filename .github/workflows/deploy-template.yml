name: RTM Dashboard - Template - Deploy
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: GitHub Action environment to use
      runner:
        required: true
        type: string
        description: GitHub Action runners to use
    secrets:
      REMOTE_USER:
        required: true
        description: Remote user
      REMOTE_PASS:
        required: true
        description: Remote password
      username:
        required: true
        description: domain username
      password:
        required: true
        description: domain password
      mit_token:
        required: true
        description: token
        
env:
  version: "5.0.0"
  PreReqVersion: "4.0.0"
  log_file: '\d$\Logs\GitHub\GitHubAppLog.txt'
  Application: "RTM Dashboard PCAM"
  AppShortName: "RTM_PCAM"
  GITHUB_CONTEXT: ${{ toJson(github) }}
  #REMOTE_USER: ${{ secrets.OBSERV_DEPLOY_USERNAME }}
  #REMOTE_PASS: ${{ secrets.OBSERV_DEPLOY_PASSWORD }}
  #username: ${{ secrets.username }}
  #password: ${{ secrets.password }}
  #username: ${{ secrets[format('{0}_PCAM_USER', ${{ inputs.environment }})] }}
  #password: ${{ secrets[format('{0}_PCAM_PSWD', ${{ inputs.environment }})] }}
  
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:

         
  Prevalidate:
    name: Prevalidate in ${{ inputs.environment }}
  
    # The type of runner that the job will run on
    runs-on: ${{ fromJson(inputs.runner) }}

    environment:
      name: ${{ inputs.environment }}
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
       
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
  
      # Checks-out Common Scripts repository
      - name: Check out Common Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.observability.real-time-metrics-dashboard
          token: ${{ secrets.MIT_TOKEN }}
          path: Common
          ref: 'v1.0.0'

     # Checks-out shared PS Scripts repository
      - name: Check out shared PS Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.ps-commonscripts
          token: ${{ secrets.MIT_TOKEN }}
          path: Shared
          ref: 'v1.2.0'

      # Run pre-validate
      - name: Run pre-validate
        run: |
          echo "Begin pre-validate"
          echo "Workflow: ${{ github.SERVER_URL }}/${{ github.REPOSITORY }}/actions/runs/${{ github.RUN_ID }}"
          echo '${{ secrets.REMOTE_PASS }}'
          powershell -file ${{ github.WORKSPACE }}\Common\Scripts\RTM_pre-install-HC.ps1 -deployTo ${{ inputs.environment }} -scriptPath ${{ github.WORKSPACE }}\Common\Scripts -version ${{ env.version }} -releaseDir "${{ github.WORKSPACE }}\releases\${{ env.version }}" -remote_user ${{ secrets.REMOTE_USER }} -remote_pass '${{ secrets.REMOTE_PASS }}' -Appname "${{ env.AppShortName}}" -PreReqVersion "${{ env.PreReqVersion}}" -LogFile "${{ env.log_file}}"
  
  
         
  Stage:
    name: Stage in ${{ inputs.environment }}

    runs-on: ${{ fromJson(inputs.runner) }}

    environment:
      name: ${{ inputs.environment }}
      
    needs: Prevalidate
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
             
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

     # Checks-out Common Scripts repository
      - name: Check out Common Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.observability.real-time-metrics-dashboard
          token: ${{ secrets.MIT_TOKEN }}
          path: Common
          ref: 'v1.0.0'

     # Checks-out shared PS Scripts repository
      - name: Check out shared PS Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.ps-commonscripts
          token: ${{ secrets.MIT_TOKEN }}
          path: Shared
          ref: 'v1.2.0'

      # Run Stage Files
      - name: Run Stage Files
        run: |
          echo "Begin stage-files"
          powershell -file ${{ github.WORKSPACE }}\Common\Scripts\RTM_stage_package.ps1 -deployTo ${{ inputs.environment }} -scriptPath ${{ github.WORKSPACE }}\Common\Scripts -ReleaseDir "${{ github.WORKSPACE }}\releases\${{ env.version }}" -version ${{ env.version }} -remote_user ${{ secrets.REMOTE_USER }} -remote_pass '${{ secrets.REMOTE_PASS }}' -Appname "${{ env.AppShortName}}" -LogFile "${{ env.log_file}}"

         
  Backup:
    name: Backup in ${{ inputs.environment }}

    runs-on: ${{ fromJson(inputs.runner) }}

    environment:
      name: ${{ inputs.environment }}
      
    needs: Stage
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        
      # Checks-out Common Scripts repository
      - name: Check out Common Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.observability.real-time-metrics-dashboard
          token: ${{ secrets.MIT_TOKEN }}
          path: Common
          ref: 'v1.0.0'

     # Checks-out shared PS Scripts repository
      - name: Check out shared PS Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.ps-commonscripts
          token: ${{ secrets.MIT_TOKEN }}
          path: Shared
          ref: 'v1.2.0'

      # Run Backup
      - name: Run Backup
        run: |
          echo "Begin Backup"     
          powershell -file ${{ github.WORKSPACE }}\Common\Scripts\RTM_backup.ps1 -deployTo ${{ inputs.environment }} -scriptPath ${{ github.WORKSPACE }}\Common\Scripts -Version ${{ env.version }} -remote_user ${{ secrets.REMOTE_USER }} -remote_pass '${{ secrets.REMOTE_PASS }}' -Appname "${{ env.AppShortName}}" -LogFile "${{ env.log_file}}"


  Audit:

    name: Audit in ${{ inputs.environment }}

    runs-on: ${{ fromJson(inputs.runner) }}

    environment:
      name: ${{ inputs.environment }}
      
    needs: Backup
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
             
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        
      # Checks-out Common Scripts repository
      - name: Check out Common Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.observability.real-time-metrics-dashboard
          token: ${{ secrets.MIT_TOKEN }}
          path: Common
          ref: 'v1.0.0'

     # Checks-out shared PS Scripts repository
      - name: Check out shared PS Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.ps-commonscripts
          token: ${{ secrets.MIT_TOKEN }}
          path: Shared
          ref: 'v1.2.0'
          
            
      # Run Audit
      - name: Run Audit
        run: |
          echo "Begin Audit"     
          powershell -file ${{ github.WORKSPACE }}\Common\Scripts\RTM_Audit.ps1 -deployTo ${{ inputs.environment }} -scriptPath ${{ github.WORKSPACE }}\Common\Scripts -Version ${{ env.version }} -remote_user ${{ secrets.REMOTE_USER }} -remote_pass '${{ secrets.REMOTE_PASS }}' -Appname "${{ env.AppShortName}}" -LogFile "${{ env.log_file}}" -DebugMode "Y"

  DeployCheckPoint:
    name: DeployCheckPoint in ${{ inputs.environment }}

    runs-on: ${{ fromJson(inputs.runner) }}
      
    needs: Audit

    # will wait until user approves
    environment:
       name: approve_RTM_PCAM_deploy  

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      # Deploy Checkpoint
      - name: Deploy Checkpoint
        run: |
          echo "Deploy Checkpoint"    
          
         
         
  Deploy:
    name: Deploy in ${{ inputs.environment }}

    runs-on: ${{ fromJson(inputs.runner) }}
 
    environment:
      name: ${{ inputs.environment }}
      
    needs: DeployCheckPoint
         
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
             
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Checks-out Common Scripts repository
      - name: Check out Common Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.observability.real-time-metrics-dashboard
          token: ${{ secrets.MIT_TOKEN }}
          path: Common     
          ref: 'v1.0.0'

     # Checks-out shared PS Scripts repository
      - name: Check out shared PS Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.ps-commonscripts
          token: ${{ secrets.MIT_TOKEN }}
          path: Shared
          ref: 'v1.2.0'
          
      # Run Deploy
      - name: Run Deploy
        run: |
          echo "Begin Deploy"  
          powershell -file ${{ github.WORKSPACE }}\Common\Scripts\RTM_Install.ps1 -deployTo ${{ inputs.environment }} -scriptPath ${{ github.WORKSPACE }}\Common\Scripts -Version ${{ env.version }} -remote_user ${{ secrets.REMOTE_USER }} -remote_pass '${{ secrets.REMOTE_PASS }}'  -TaskUser ${{ secrets.username }} -TaskPwd '${{ secrets.password }}' -Appname "${{ env.AppShortName}}" -LogFile "${{ env.log_file}}"
       
 
  Post-Validate:
    name: Post-Validate in ${{ inputs.environment }}

    runs-on: ${{ fromJson(inputs.runner) }}

    environment:
      name: ${{ inputs.environment }}
      
    needs: Deploy
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
             
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
 
     # Checks-out Common Scripts repository
      - name: Check out Common Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.observability.real-time-metrics-dashboard
          token: ${{ secrets.MIT_TOKEN }}
          path: Common 
          ref: 'v1.0.0'

      # Checks-out shared PS Scripts repository
      - name: Check out shared PS Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.ps-commonscripts
          token: ${{ secrets.MIT_TOKEN }}
          path: Shared
          ref: 'v1.2.0'
          
      # Run Post Validate
      - name: Run Post-Validate
        run: |
          echo "Begin Post-Validate"
          powershell -file ${{ github.WORKSPACE }}\Common\Scripts\RTM_post-install-HC.ps1 -deployTo ${{ inputs.environment }} -scriptPath ${{ github.WORKSPACE }}\Common\Scripts -version ${{ env.version }} -remote_user ${{ secrets.REMOTE_USER }} -remote_pass '${{ secrets.REMOTE_PASS }}' -Appname "${{ env.AppShortName}}" -LogFile "${{ env.log_file}}"

  NotificationCheckPoint:
    name: NotificationCheckPoint in ${{ inputs.environment }}

    runs-on: ${{ fromJson(inputs.runner) }}
      
    needs: Post-Validate

    # will wait until user approves
    environment:
       name: approve_RTM_PCAM_notify  

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      # NotificationCheckPoint
      - name: NotificationCheckPoint
        run: |
          echo "NotificationCheckPoint"  
          
  
  Notification:
    name: Notification in ${{ inputs.environment }}
    
    runs-on: ${{ fromJson(inputs.runner) }}

    environment:
      name: ${{ inputs.environment }}
      
    needs: NotificationCheckPoint
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
             
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Checks-out Common Scripts repository
      - name: Check out Common Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.observability.real-time-metrics-dashboard
          token: ${{ secrets.MIT_TOKEN }}
          path: Common 
          ref: 'v1.0.0'

     # Checks-out shared PS Scripts repository
      - name: Check out shared PS Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.ps-commonscripts
          token: ${{ secrets.MIT_TOKEN }}
          path: Shared
          ref: 'v1.2.0'

      # Run Notification
      - name: Run Deploy Notification
        run: |
          echo "Begin Deploy Notification"
          powershell.exe -file ${{ github.WORKSPACE }}\Common\Scripts\RTM_Notification.ps1 -deployTo ${{ inputs.environment }} -scriptPath ${{ github.WORKSPACE }}\Common\Scripts -Version ${{ env.version }} -subject "[${{ inputs.environment }}] - ${{ env.Application }} Deploy" -message "${{ env.Application }} ${{ env.version }} was deployed in ${{ inputs.environment }}" -Appname "${{ env.AppShortName}}" -LogFile "${{ env.log_file}}"


  RollbackCheckPoint:
    name: RollbackCheckPointt in ${{ inputs.environment }}

    runs-on: ${{ fromJson(inputs.runner) }}
      
    needs: Deploy

    # will wait until user approves
    environment:
       name: approve_RTM_PCAM_rollback  

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      # RollbackCheckPoint
      - name: RollbackCheckPoint
        run: |
          echo "RollbackCheckPoint" 
          
  Rollback:
    name: Rollback in ${{ inputs.environment }}
    
    runs-on: ${{ fromJson(inputs.runner) }}

    environment:
      name: ${{ inputs.environment }}
      
    needs: RollbackCheckPoint

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
             
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Checks-out Common Scripts repository
      - name: Check out Common Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.observability.real-time-metrics-dashboard
          token: ${{ secrets.MIT_TOKEN }}
          path: Common 
          ref: 'v1.0.0'

     # Checks-out shared PS Scripts repository
      - name: Check out shared PS Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.ps-commonscripts
          token: ${{ secrets.MIT_TOKEN }}
          path: Shared
          ref: 'v1.2.0'

      # Run Rollback
      - name: Run Rollback
        run: |
          echo "Begin Rollback"
          powershell -file ${{ github.WORKSPACE }}\Common\Scripts\RTM_rollback-install.ps1 -deployTo ${{ inputs.environment }} -scriptPath ${{ github.WORKSPACE }}\Common\Scripts -Version ${{ env.version }} -remote_user ${{ secrets.REMOTE_USER }} -remote_pass '${{ secrets.REMOTE_PASS }}'  -TaskUser ${{ secrets.username }} -TaskPwd '${{ secrets.password }}' -Appname "${{ env.AppShortName}}" -LogFile "${{ env.log_file}}"

  Rollback-Notification:
    name: Rollback-Notification in ${{ inputs.environment }}
    
    runs-on: ${{ fromJson(inputs.runner) }}

    environment:
      name: ${{ inputs.environment }}
      
    needs: Rollback
   
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
             
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Checks-out Common Scripts repository
      - name: Check out Common Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.observability.real-time-metrics-dashboard
          token: ${{ secrets.MIT_TOKEN }}
          path: Common 
          ref: 'v1.0.0'

      # Checks-out shared PS Scripts repository
      - name: Check out shared PS Scripts
        uses: actions/checkout@v3
        with:
          repository: intel-manufacturing/applications.manufacturing.intel.common.ps-commonscripts
          token: ${{ secrets.MIT_TOKEN }}
          path: Shared
          ref: 'v1.2.0'

      # Run Rollback Notification
      - name: Run Rollback Notification
        run: |
          echo "Begin Rollback Notification"
          powershell.exe -file ${{ github.WORKSPACE }}\Common\Scripts\RTM_Notification.ps1 -deployTo ${{ inputs.environment }} -scriptPath ${{ github.WORKSPACE }}\Common\Scripts -Version ${{ env.version }} -subject "[${{ inputs.environment }}] - ${{ env.Application }} Rollback" -message "${{ env.Application }} ${{ env.version }} was rolled back in ${{ inputs.environment }}" -Appname "${{ env.AppShortName}}" -LogFile "${{ env.log_file}}"
             
